var Prototype = { Version: "1.6.1", Browser: (function () { var b = navigator.userAgent; var a = Object.prototype.toString.call(window.opera) == "[object Opera]"; return { IE: !!window.attachEvent && !a, IEVersion: IEVersion, Opera: a, WebKit: b.indexOf("AppleWebKit/") > -1, Gecko: b.indexOf("Gecko") > -1 && b.indexOf("KHTML") === -1, MobileSafari: /Apple.*Mobile.*Safari/.test(b) } })(), BrowserFeatures: { XPath: !!document.evaluate, SelectorsAPI: !!document.querySelector, ElementExtensions: (function () { var a = window.Element || window.HTMLElement; return !!(a && a.prototype) })(), SpecificElementExtensions: (function () { if (typeof window.HTMLDivElement !== "undefined") { return true } var a = document.createElement("div"); var b = document.createElement("form"); var c = false; if (a.__proto__ && (a.__proto__ !== b.__proto__)) { c = true } a = b = null; return c })() }, ScriptFragment: "<script[^>]*>([\\S\\s]*?)</script>", JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/, emptyFunction: function () { }, K: function (a) { return a } }; if (Prototype.Browser.IE) { if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) { var IEVersion = new Number(RegExp.$1); Prototype.Browser.IE6 = IEVersion == 6; Prototype.Browser.IE7 = IEVersion == 7; Prototype.Browser.IE8 = IEVersion == 8; Prototype.Browser.IE9 = IEVersion == 9; Prototype.Browser.IE10 = IEVersion == 10 } } else { Prototype.Browser.IE6 = Prototype.Browser.IE7 = Prototype.Browser.IE8 = Prototype.Browser.IE9 = Prototype.Browser.IE10 = false } if (Prototype.Browser.MobileSafari) { Prototype.BrowserFeatures.SpecificElementExtensions = false } var Abstract = {}; var Try = { these: function () { var f; for (var b = 0, d = arguments.length; b < d; b++) { var c = arguments[b]; try { f = c(); break } catch (a) { } } return f } }; var Class = (function () { function c() { } function b() { var f = null, g = $A(arguments); if (Object.isFunction(g[0])) { f = g.shift() } function e() { this.initialize.apply(this, arguments) } Object.extend(e, Class.Methods); e.superclass = f; e.subclasses = []; if (f) { c.prototype = f.prototype; e.prototype = new c; f.subclasses.push(e) } for (var d = 0; d < g.length; d++) { e.addMethods(g[d]) } if (!e.prototype.initialize) { e.prototype.initialize = Prototype.emptyFunction } e.prototype.constructor = e; return e } function a(k) { var d = this.superclass && this.superclass.prototype; var h = Object.keys(k); if (!Object.keys({ toString: true }).length) { if (k.toString != Object.prototype.toString) { h.push("toString") } if (k.valueOf != Object.prototype.valueOf) { h.push("valueOf") } } for (var e = 0, f = h.length; e < f; e++) { var j = h[e], l = k[j]; if (d && Object.isFunction(l) && l.argumentNames().first() == "$super") { var g = l; l = (function (i) { return function () { return d[i].apply(this, arguments) } })(j).wrap(g); l.valueOf = g.valueOf.bind(g); l.toString = g.toString.bind(g) } this.prototype[j] = l } return this } return { create: b, Methods: { addMethods: a } } })(); (function () { var a = Object.prototype.toString; function c(q, s) { for (var r in s) { q[r] = s[r] } return q } function d(r) { try { if (k(r)) { return "undefined" } if (r === null) { return "null" } return r.inspect ? r.inspect() : String(r) } catch (q) { if (q instanceof RangeError) { return "..." } throw q } } function n(q) { var t = typeof q; switch (t) { case "undefined": case "function": case "unknown": return; case "boolean": return q.toString() } if (q === null) { return "null" } if (q.toJSON) { return q.toJSON() } if (f(q)) { return } var s = []; for (var r in q) { var u = n(q[r]); if (!k(u)) { s.push(r.toJSON() + ": " + u) } } return "{" + s.join(", ") + "}" } function o(q) { return $H(q).toQueryString() } function m(q) { return q && q.toHTML ? q.toHTML() : String.interpret(q) } function l(q) { var s = []; for (var r in q) { s.push(r) } return s } function p(q) { var s = []; for (var r in q) { s.push(q[r]) } return s } function b(q) { return c({}, q) } function f(q) { return !!(q && q.nodeType == 1) } function e(q) { return a.call(q) == "[object Array]" } function h(q) { return q instanceof Hash } function g(q) { return typeof q === "function" } function j(q) { return a.call(q) == "[object String]" } function i(q) { return a.call(q) == "[object Number]" } function k(q) { return typeof q === "undefined" } c(Object, { extend: c, inspect: d, toJSON: n, toQueryString: o, toHTML: m, keys: l, values: p, clone: b, isElement: f, isArray: e, isHash: h, isFunction: g, isString: j, isNumber: i, isUndefined: k }) })(); Object.extend(Function.prototype, (function () { var i = Array.prototype.slice; function j(m, l) { var n = m.length, o = l.length; while (o--) { m[n + o] = l[o] } return m } function g(m, l) { m = i.call(m, 0); return j(m, l) } function a() { var l = this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1].replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g, "").replace(/\s+/g, "").split(","); return l.length == 1 && !l[0] ? [] : l } function b(n) { if (arguments.length < 2 && Object.isUndefined(arguments[0])) { return this } var l = this, m = i.call(arguments, 1); return function () { var o = g(m, arguments); return l.apply(n, o) } } function c(n) { var l = this, m = i.call(arguments, 1); return function (p) { var o = j([p || window.event], m); return l.apply(n, o) } } function d() { if (!arguments.length) { return this } var l = this, m = i.call(arguments, 0); return function () { var n = g(m, arguments); return l.apply(this, n) } } function f(n) { var l = this, m = i.call(arguments, 1); n = n * 1000; return window.setTimeout(function () { return l.apply(l, m) }, n) } function e() { var l = j([0.01], arguments); return this.delay.apply(this, l) } function k(m) { var l = this; return function () { var n = j([l.bind(this)], arguments); return m.apply(this, n) } } function h() { if (this._methodized) { return this._methodized } var l = this; return this._methodized = function () { var m = j([this], arguments); return l.apply(null, m) } } return { argumentNames: a, bind: b, bindAsEventListener: c, curry: d, delay: f, defer: e, wrap: k, methodize: h } })()); Date.prototype.toJSON = function () { return '"' + this.getUTCFullYear() + "-" + (this.getUTCMonth() + 1).toPaddedString(2) + "-" + this.getUTCDate().toPaddedString(2) + "T" + this.getUTCHours().toPaddedString(2) + ":" + this.getUTCMinutes().toPaddedString(2) + ":" + this.getUTCSeconds().toPaddedString(2) + 'Z"' }; RegExp.prototype.match = RegExp.prototype.test; RegExp.escape = function (a) { return String(a).replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1") }; var PeriodicalExecuter = Class.create({ initialize: function (a, b) { this.callback = a; this.frequency = b; this.currentlyExecuting = false; this.registerCallback() }, registerCallback: function () { this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000) }, execute: function () { this.callback(this) }, stop: function () { if (!this.timer) { return } clearInterval(this.timer); this.timer = null }, onTimerEvent: function () { if (!this.currentlyExecuting) { try { this.currentlyExecuting = true; this.execute(); this.currentlyExecuting = false } catch (a) { this.currentlyExecuting = false; throw a } } } }); Object.extend(String, { interpret: function (a) { return a == null ? "" : String(a) }, specialChar: { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", "\\": "\\\\" } }); Object.extend(String.prototype, (function () { function prepareReplacement(replacement) { if (Object.isFunction(replacement)) { return replacement } var template = new Template(replacement); return function (match) { return template.evaluate(match) } } function gsub(pattern, replacement) { var result = "", source = this, match; replacement = prepareReplacement(replacement); if (Object.isString(pattern)) { pattern = RegExp.escape(pattern) } if (!(pattern.length || pattern.source)) { replacement = replacement(""); return replacement + source.split("").join(replacement) + replacement } while (source.length > 0) { if (match = source.match(pattern)) { result += source.slice(0, match.index); result += String.interpret(replacement(match)); source = source.slice(match.index + match[0].length) } else { result += source, source = "" } } return result } function sub(pattern, replacement, count) { replacement = prepareReplacement(replacement); count = Object.isUndefined(count) ? 1 : count; return this.gsub(pattern, function (match) { if (--count < 0) { return match[0] } return replacement(match) }) } function scan(pattern, iterator) { this.gsub(pattern, iterator); return String(this) } function truncate(length, truncation) { length = length || 30; truncation = Object.isUndefined(truncation) ? "..." : truncation; return this.length > length ? this.slice(0, length - truncation.length) + truncation : String(this) } function strip() { return this.replace(/^\s+/, "").replace(/\s+$/, "") } function stripTags() { return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi, "") } function stripScripts() { return this.replace(new RegExp(Prototype.ScriptFragment, "img"), "") } function extractScripts() { var matchAll = new RegExp(Prototype.ScriptFragment, "img"); var matchOne = new RegExp(Prototype.ScriptFragment, "im"); return (this.match(matchAll) || []).map(function (scriptTag) { return (scriptTag.match(matchOne) || ["", ""])[1] }) } function evalScripts() { return this.extractScripts().map(function (script) { return eval(script) }) } function escapeHTML() { return this.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;") } function unescapeHTML() { return this.stripTags().replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&") } function toQueryParams(separator) { var match = this.strip().match(/([^?#]*)(#.*)?$/); if (!match) { return {} } return match[1].split(separator || "&").inject({}, function (hash, pair) { if ((pair = pair.split("="))[0]) { var key = decodeURIComponent(pair.shift()); var value = pair.length > 1 ? pair.join("=") : pair[0]; if (value != undefined) { value = decodeURIComponent(value) } if (key in hash) { if (!Object.isArray(hash[key])) { hash[key] = [hash[key]] } hash[key].push(value) } else { hash[key] = value } } return hash }) } function toArray() { return this.split("") } function succ() { return this.slice(0, this.length - 1) + String.fromCharCode(this.charCodeAt(this.length - 1) + 1) } function times(count) { return count < 1 ? "" : new Array(count + 1).join(this) } function camelize() { var parts = this.split("-"), len = parts.length; if (len == 1) { return parts[0] } var camelized = this.charAt(0) == "-" ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1) : parts[0]; for (var i = 1; i < len; i++) { camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1) } return camelized } function capitalize() { return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase() } function underscore() { return this.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/-/g, "_").toLowerCase() } function dasherize() { return this.replace(/_/g, "-") } function inspect(useDoubleQuotes) { var escapedString = this.replace(/[\x00-\x1f\\]/g, function (character) { if (character in String.specialChar) { return String.specialChar[character] } return "\\u00" + character.charCodeAt().toPaddedString(2, 16) }); if (useDoubleQuotes) { return '"' + escapedString.replace(/"/g, '\\"') + '"' } return "'" + escapedString.replace(/'/g, "\\'") + "'" } function toJSON() { return this.inspect(true) } function unfilterJSON(filter) { return this.replace(filter || Prototype.JSONFilter, "$1") } function isJSON() { var str = this; if (str.blank()) { return false } str = this.replace(/\\./g, "@").replace(/"[^"\\\n\r]*"/g, ""); return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str) } function evalJSON(sanitize) { var json = this.unfilterJSON(); try { if (!sanitize || json.isJSON()) { return eval("(" + json + ")") } } catch (e) { } throw new SyntaxError("Badly formed JSON string: " + this.inspect()) } function include(pattern) { return this.indexOf(pattern) > -1 } function startsWith(pattern) { return this.indexOf(pattern) === 0 } function endsWith(pattern) { var d = this.length - pattern.length; return d >= 0 && this.lastIndexOf(pattern) === d } function empty() { return this == "" } function blank() { return /^\s*$/.test(this) } function interpolate(object, pattern) { return new Template(this, pattern).evaluate(object) } return { gsub: gsub, sub: sub, scan: scan, truncate: truncate, strip: String.prototype.trim ? String.prototype.trim : strip, trim: String.prototype.trim ? String.prototype.trim : strip, stripTags: stripTags, stripScripts: stripScripts, extractScripts: extractScripts, evalScripts: evalScripts, escapeHTML: escapeHTML, unescapeHTML: unescapeHTML, toQueryParams: toQueryParams, parseQuery: toQueryParams, toArray: toArray, succ: succ, times: times, camelize: camelize, capitalize: capitalize, underscore: underscore, dasherize: dasherize, inspect: inspect, toJSON: toJSON, unfilterJSON: unfilterJSON, isJSON: isJSON, evalJSON: evalJSON, include: include, startsWith: startsWith, endsWith: endsWith, empty: empty, blank: blank, interpolate: interpolate } })()); var Template = Class.create({ initialize: function (b, a) { this.template = b.toString(); this.pattern = a || Template.Pattern }, evaluate: function (a) { if (a && Object.isFunction(a.toTemplateReplacements)) { a = a.toTemplateReplacements() } return this.template.gsub(this.pattern, function (f) { if (a == null) { return (f[1] + "") } var b = f[1] || ""; if (b == "\\") { return f[2] } var d = a, e = f[3]; var g = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/; f = g.exec(e); if (f == null) { return b } while (f != null) { var c = f[1].startsWith("[") ? f[2].replace(/\\\\]/g, "]") : f[1]; d = d[c]; if (null == d || "" == f[3]) { break } e = e.substring("[" == f[3] ? f[1].length : f[0].length); f = g.exec(e) } return b + String.interpret(d) }) } }); Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/; var $break = {}; var Enumerable = (function () { function e(z, w) { var y = 0; try { if (typeof this._each === "undefined") { this._each = Array.prototype._each } this._each(function (A) { z.call(w, A, y++) }) } catch (x) { if (x != $break) { throw x } } return this } function f(A, z, x) { var y = -A, B = [], w = this.toArray(); if (A < 1) { return w } while ((y += A) < w.length) { B.push(w.slice(y, y + A)) } return B.collect(z, x) } function a(x, w) { x = x || Prototype.K; var y = true; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { y = y && !!x.call(w, A, z); if (!y) { throw $break } }); return y } function b(x, w) { x = x || Prototype.K; var y = false; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { if (y = !!x.call(w, A, z)) { throw $break } }); return y } function c(x, w) { x = x || Prototype.K; var y = []; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { y.push(x.call(w, A, z)) }); return y } function d(x, w) { var y; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { if (x.call(w, A, z)) { y = A; throw $break } }); return y } function g(x, w) { var y = []; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { if (x.call(w, A, z)) { y.push(A) } }); return y } function h(x, y, w) { y = y || Prototype.K; var z = []; if (Object.isString(x)) { x = new RegExp(RegExp.escape(x)) } if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (B, A) { if (x.match(B)) { z.push(y.call(w, B, A)) } }); return z } function i(x) { if (Object.isFunction(this.indexOf)) { if (this.indexOf(x) != -1) { return true } } var w = false; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (y) { if (y == x) { w = true; throw $break } }); return w } function j(x, w) { w = Object.isUndefined(w) ? null : w; return this.eachSlice(x, function (y) { while (y.length < x) { y.push(w) } return y }) } function k(y, x, w) { if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { y = x.call(w, y, A, z) }); return y } function m(x) { var w = $A(arguments).slice(1); return this.map(function (y) { return y[x].apply(y, w) }) } function n(x, w) { x = x || Prototype.K; var y; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { A = x.call(w, A, z); if (y == null || A >= y) { y = A } }); return y } function o(x, w) { x = x || Prototype.K; var y; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { A = x.call(w, A, z); if (y == null || A < y) { y = A } }); return y } function p(y, w) { y = y || Prototype.K; var z = [], x = []; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (B, A) { (y.call(w, B, A) ? z : x).push(B) }); return [z, x] } function q(w) { var x = []; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (y) { x.push(y[w]) }); return x } function r(x, w) { var y = []; if (typeof this.each === "undefined") { this.each = Array.prototype.each } this.each(function (A, z) { if (!x.call(w, A, z)) { y.push(A) } }); return y } function t(x, w) { return this.map(function (z, y) { return { value: z, criteria: x.call(w, z, y) } }).sort(function (A, B) { var y = A.criteria, z = B.criteria; return y < z ? -1 : y > z ? 1 : 0 }).pluck("value") } function u() { return this.map() } function v() { var y = Prototype.K, w = $A(arguments); if (Object.isFunction(w.last())) { y = w.pop() } var x = [this].concat(w).map($A); return this.map(function (A, z) { return y(x.pluck(z)) }) } function s() { return this.toArray().length } function l() { return "#<Enumerable:" + this.toArray().inspect() + ">" } return { each: e, foreach: e, eachSlice: f, all: a, every: a, any: b, some: b, collect: c, map: c, detect: d, findAll: g, select: g, filter: g, grep: h, include: i, member: i, inGroupsOf: j, inject: k, invoke: m, max: n, min: o, partition: p, pluck: q, reject: r, sortBy: t, toArray: u, entries: u, zip: v, size: s, inspect: l, find: d } })(); function $A(a) { if (!a) { return [] } if ("toArray" in Object(a)) { return a.toArray() } var b = a.length || 0, c = new Array(b); while (b--) { c[b] = a[b] } return c } function $w(a) { if (!Object.isString(a)) { return [] } a = a.strip(); return a ? a.split(/\s+/) : [] } Array.from = $A; (function () { var b = Array.prototype, r = b.slice, a = b.forEach; function h(w) { for (var v = 0, x = this.length; v < x; v++) { w(this[v]) } } if (!a) { a = h } function c() { this.length = 0; return this } function i() { return this[0] } function n() { return this[this.length - 1] } function e() { return this.select(function (v) { return v != null }) } function j() { return this.inject([], function (v, w) { if (Object.isArray(w)) { return v.concat(w.flatten()) } v.push(w); return v }) } function u() { var v = r.call(arguments, 0); return this.select(function (w) { return !v.include(w) }) } function p(v) { return (v !== false ? this : this.toArray())._reverse() } function t(v) { return this.inject([], function (w, y, x) { if (0 == x || (v ? w.last() != y : !w.include(y))) { w.push(y) } return w }) } function m(v) { return this.uniq().findAll(function (w) { return v.detect(function (x) { return w === x }) }) } function d() { return r.call(this, 0) } function q() { return this.length } function l() { return "[" + this.map(Object.inspect).join(", ") + "]" } function s() { var v = []; this.each(function (w) { var x = Object.toJSON(w); if (!Object.isUndefined(x)) { v.push(x) } }); return "[" + v.join(", ") + "]" } function k(w, v) { v || (v = 0); var x = this.length; if (v < 0) { v = x + v } for (; v < x; v++) { if (this[v] === w) { return v } } return -1 } function o(w, v) { v = isNaN(v) ? this.length : (v < 0 ? this.length + v : v) + 1; var x = this.slice(0, v).reverse().indexOf(w); return (x < 0) ? x : v - x - 1 } function f() { var v = r.call(this, 0), y; for (var x = 0, A = arguments.length; x < A; x++) { y = arguments[x]; if (Object.isArray(y) && !("callee" in y)) { for (var z = 0, w = y.length; z < w; z++) { v.push(y[z]) } } else { v.push(y) } } return v } Object.extend(b, Enumerable); if (!b._reverse) { b._reverse = b.reverse } Object.extend(b, { _each: a, clear: c, first: i, last: n, compact: e, flatten: j, without: u, reverse: p, uniq: t, intersect: m, clone: d, toArray: d, size: q, inspect: l, toJSON: s }); var g = (function () { return [].concat(arguments)[0][0] !== 1 })(1, 2); if (g) { b.concat = f } if (!b.indexOf) { b.indexOf = k } if (!b.lastIndexOf) { b.lastIndexOf = o } })(); function $H(a) { return new Hash(a) } var Hash = Class.create(Enumerable, (function () { function e(q) { this._object = Object.isHash(q) ? q.toObject() : Object.clone(q) } function a(q) { for (var r in this._object) { var t = this._object[r], s = [r, t]; s.key = r; s.value = t; q(s) } } function i(q, r) { return this._object[q] = r } function c(q) { if (this._object[q] !== Object.prototype[q]) { return this._object[q] } } function n(q) { var r = this._object[q]; delete this._object[q]; return r } function k() { return Object.clone(this._object) } function g() { return this.pluck("key") } function p() { return this.pluck("value") } function d(r) { var q = this.detect(function (s) { return s.value === r }); return q && q.key } function h(q) { return this.clone().update(q) } function o(q) { return new Hash(q).inject(this, function (s, r) { s.set(r.key, r.value); return s }) } function l(q, r) { if (Object.isUndefined(r)) { return q } return q + "=" + encodeURIComponent(String.interpret(r)) } function m() { return this.inject([], function (s, r) { var q = encodeURIComponent(r.key), t = r.value; if (t && typeof t == "object") { if (Object.isArray(t)) { return s.concat(t.map(l.curry(q))) } } else { s.push(l(q, t)) } return s }).join("&") } function f() { return "#<Hash:{" + this.map(function (q) { return q.map(Object.inspect).join(": ") }).join(", ") + "}>" } function j() { return Object.toJSON(this.toObject()) } function b() { return new Hash(this) } return { initialize: e, _each: a, set: i, get: c, unset: n, toObject: k, toTemplateReplacements: k, keys: g, values: p, index: d, merge: h, update: o, toQueryString: m, inspect: f, toJSON: j, clone: b } })()); Hash.from = $H; Object.extend(Number.prototype, (function () { function g() { return this.toPaddedString(2, 16) } function e() { return this + 1 } function f(k, j) { $R(0, this, true).each(k, j); return this } function i(j, k) { var l = this.toString(k || 10); return "0".times(j - l.length) + l } function h() { return isFinite(this) ? this.toString() : "null" } function a() { return Math.abs(this) } function d() { return Math.round(this) } function b() { return Math.ceil(this) } function c() { return Math.floor(this) } return { toColorPart: g, succ: e, times: f, toPaddedString: i, toJSON: h, abs: a, round: d, ceil: b, floor: c } })()); function $R(c, a, b) { return new ObjectRange(c, a, b) } var ObjectRange = Class.create(Enumerable, (function () { function c(f, d, e) { this.start = f; this.end = d; this.exclusive = e } function a(d) { var e = this.start; while (this.include(e)) { d(e); e = e.succ() } } function b(d) { if (d < this.start) { return false } if (this.exclusive) { return d < this.end } return d <= this.end } return { initialize: c, _each: a, include: b } })()); var Ajax = { getTransport: function () { return Try.these(function () { return new XMLHttpRequest() }, function () { return new ActiveXObject("Msxml2.XMLHTTP") }, function () { return new ActiveXObject("Microsoft.XMLHTTP") }) || false }, activeRequestCount: 0 }; Ajax.Responders = { responders: [], _each: function (a) { this.responders._each(a) }, register: function (a) { if (!this.include(a)) { this.responders.push(a) } }, unregister: function (a) { this.responders = this.responders.without(a) }, dispatch: function (a, c, d, b) { this.each(function (g) { if (Object.isFunction(g[a])) { try { g[a].apply(g, [c, d, b]) } catch (f) { } } }) } }; Object.extend(Ajax.Responders, Enumerable); Ajax.Responders.register({ onCreate: function () { Ajax.activeRequestCount++ }, onComplete: function () { Ajax.activeRequestCount-- } }); Ajax.Base = Class.create({ initialize: function (a) { this.options = { method: "post", asynchronous: true, contentType: "application/x-www-form-urlencoded", encoding: "UTF-8", parameters: "", evalJSON: true, evalJS: true }; Object.extend(this.options, a || {}); this.options.method = this.options.method.toLowerCase(); if (Object.isString(this.options.parameters)) { this.options.parameters = this.options.parameters.toQueryParams() } else { if (Object.isHash(this.options.parameters)) { this.options.parameters = this.options.parameters.toObject() } } } }); Ajax.Request = Class.create(Ajax.Base, { _complete: false, initialize: function ($super, b, a) { $super(a); this.transport = Ajax.getTransport(); this.request(b) }, request: function (d) { this.url = d; this.method = this.options.method; var b = Object.clone(this.options.parameters); if (!["get", "post"].include(this.method)) { b._method = this.method; this.method = "post" } this.parameters = b; if (b = Object.toQueryString(b)) { if (this.method == "get") { this.url += (this.url.include("?") ? "&" : "?") + b } else { if (/Konqueror|Safari|KHTML/.test(navigator.userAgent)) { b += "&_=" } } } try { var c = new Ajax.Response(this); if (this.options.onCreate) { this.options.onCreate(c) } Ajax.Responders.dispatch("onCreate", this, c); this.transport.open(this.method.toUpperCase(), this.url, this.options.asynchronous); if (this.options.asynchronous) { this.respondToReadyState.bind(this).defer(1) } this.transport.onreadystatechange = this.onStateChange.bind(this); this.setRequestHeaders(); this.body = this.method == "post" ? (this.options.postBody || b) : null; this.transport.send(this.body); if (!this.options.asynchronous && this.transport.overrideMimeType) { this.onStateChange() } } catch (a) { this.dispatchException(a) } }, onStateChange: function () { var a = this.transport.readyState; if (a > 1 && !((a == 4) && this._complete)) { this.respondToReadyState(this.transport.readyState) } }, setRequestHeaders: function () { var b = { "X-Requested-With": "XMLHttpRequest", "X-Prototype-Version": Prototype.Version, Accept: "text/javascript, text/html, application/xml, text/xml, */*" }; if (this.method == "post") { b["Content-type"] = this.options.contentType + (this.options.encoding ? "; charset=" + this.options.encoding : ""); if (this.transport.overrideMimeType && (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0, 2005])[1] < 2005) { b.Connection = "close" } } if (typeof this.options.requestHeaders == "object") { var a = this.options.requestHeaders; if (Object.isFunction(a.push)) { for (var c = 0, d = a.length; c < d; c += 2) { b[a[c]] = a[c + 1] } } else { $H(a).each(function (f) { b[f.key] = f.value }) } } for (var e in b) { this.transport.setRequestHeader(e, b[e]) } }, success: function () { var a = this.getStatus(); return !a || (a >= 200 && a < 300) }, getStatus: function () { try { return this.transport.status || 0 } catch (a) { return 0 } }, respondToReadyState: function (c) { var f = Ajax.Request.Events[c], d = new Ajax.Response(this); if (f == "Complete") { try { this._complete = true; (this.options["on" + d.status] || this.options["on" + (this.success() ? "Success" : "Failure")] || Prototype.emptyFunction)(d, d.headerJSON) } catch (b) { this.dispatchException(b) } var a = d.getHeader("Content-type"); if (this.options.evalJS == "force" || (this.options.evalJS && this.isSameOrigin() && a && a.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i))) { this.evalResponse() } } try { (this.options["on" + f] || Prototype.emptyFunction)(d, d.headerJSON); Ajax.Responders.dispatch("on" + f, this, d, d.headerJSON) } catch (b) { this.dispatchException(b) } if (f == "Complete") { this.transport.onreadystatechange = Prototype.emptyFunction } }, isSameOrigin: function () { var a = this.url.match(/^\s*https?:\/\/[^\/]*/); return !a || (a[0] == "#{protocol}//#{domain}#{port}".interpolate({ protocol: location.protocol, domain: document.domain, port: location.port ? ":" + location.port : "" })) }, getHeader: function (b) { try { return this.transport.getResponseHeader(b) || null } catch (a) { return null } }, evalResponse: function () { try { return eval((this.transport.responseText || "").unfilterJSON()) } catch (e) { this.dispatchException(e) } }, dispatchException: function (a) { (this.options.onException || Prototype.emptyFunction)(this, a); Ajax.Responders.dispatch("onException", this, a) } }); Ajax.Request.Events = ["Uninitialized", "Loading", "Loaded", "Interactive", "Complete"]; Ajax.Response = Class.create({ initialize: function (b) { this.request = b; var c = this.transport = b.transport, a = this.readyState = c.readyState; if ((a > 2 && !Prototype.Browser.IE) || a == 4) { this.status = this.getStatus(); this.statusText = this.getStatusText(); this.responseText = String.interpret(c.responseText); this.headerJSON = this._getHeaderJSON() } if (a == 4) { var d = c.responseXML; this.responseXML = Object.isUndefined(d) ? null : d; this.responseJSON = this._getResponseJSON() } }, status: 0, statusText: "", getStatus: Ajax.Request.prototype.getStatus, getStatusText: function () { try { return this.transport.statusText || "" } catch (a) { return "" } }, getHeader: Ajax.Request.prototype.getHeader, getAllHeaders: function () { try { return this.getAllResponseHeaders() } catch (a) { return null } }, getResponseHeader: function (a) { return this.transport.getResponseHeader(a) }, getAllResponseHeaders: function () { return this.transport.getAllResponseHeaders() }, _getHeaderJSON: function () { var b = this.getHeader("X-JSON"); if (!b) { return null } b = decodeURIComponent(escape(b)); try { return b.evalJSON(this.request.options.sanitizeJSON || !this.request.isSameOrigin()) } catch (a) { this.request.dispatchException(a) } }, _getResponseJSON: function () { var b = this.request.options; if (!b.evalJSON || (b.evalJSON != "force" && !(this.getHeader("Content-type") || "").include("application/json")) || this.responseText.blank()) { return null } try { return this.responseText.evalJSON(b.sanitizeJSON || !this.request.isSameOrigin()) } catch (a) { this.request.dispatchException(a) } } }); Ajax.Updater = Class.create(Ajax.Request, { initialize: function ($super, a, d, c) { this.container = { success: (a.success || a), failure: (a.failure || (a.success ? null : a)) }; c = Object.clone(c); var b = c.onComplete; c.onComplete = (function (f, e) { this.updateContent(f.responseText); if (Object.isFunction(b)) { b(f, e) } }).bind(this); $super(d, c) }, updateContent: function (d) { var c = this.container[this.success() ? "success" : "failure"], b = this.options; if (!b.evalScripts) { d = d.stripScripts() } if (c = $(c)) { if (b.insertion) { if (Object.isString(b.insertion)) { var a = {}; a[b.insertion] = d; c.insert(a) } else { b.insertion(c, d) } } else { c.update(d) } } } }); Ajax.PeriodicalUpdater = Class.create(Ajax.Base, { initialize: function ($super, a, c, b) { $super(b); this.onComplete = this.options.onComplete; this.frequency = (this.options.frequency || 2); this.decay = (this.options.decay || 1); this.updater = {}; this.container = a; this.url = c; this.start() }, start: function () { this.options.onComplete = this.updateComplete.bind(this); this.onTimerEvent() }, stop: function () { this.updater.options.onComplete = undefined; clearTimeout(this.timer); (this.onComplete || Prototype.emptyFunction).apply(this, arguments) }, updateComplete: function (a) { if (this.options.decay) { this.decay = (a.responseText == this.lastText ? this.decay * this.options.decay : 1); this.lastText = a.responseText } this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency) }, onTimerEvent: function () { this.updater = new Ajax.Updater(this.container, this.url, this.options) } }); function $(a) { if (arguments.length > 1) { for (var c = 0, b = [], d = arguments.length; c < d; c++) { b.push($(arguments[c])) } return b } if (Object.isString(a)) { a = document.getElementById(a) } return Element.extend(a) } if (Prototype.BrowserFeatures.XPath) { document._getElementsByXPath = function (a, d) { var f = []; var e = document.evaluate(a, $(d) || document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null); for (var b = 0, c = e.snapshotLength; b < c; b++) { f.push(Element.extend(e.snapshotItem(b))) } return f } } if (!window.Node) { var Node = {} } if (!Node.ELEMENT_NODE) { Object.extend(Node, { ELEMENT_NODE: 1, ATTRIBUTE_NODE: 2, TEXT_NODE: 3, CDATA_SECTION_NODE: 4, ENTITY_REFERENCE_NODE: 5, ENTITY_NODE: 6, PROCESSING_INSTRUCTION_NODE: 7, COMMENT_NODE: 8, DOCUMENT_NODE: 9, DOCUMENT_TYPE_NODE: 10, DOCUMENT_FRAGMENT_NODE: 11, NOTATION_NODE: 12 }) } (function (b) { var c = (function () { var d = document.createElement("form"); var e = document.createElement("input"); var g = document.documentElement; e.setAttribute("name", "test"); d.appendChild(e); g.appendChild(d); var f = d.elements ? (typeof d.elements.test == "undefined") : null; g.removeChild(d); d = e = null; return f })(); var a = b.Element; b.Element = function (f, d) { d = d || {}; f = f.toLowerCase(); var e = Element.cache; if (c && d.name) { f = "<" + f + ' name="' + d.name + '">'; delete d.name; return Element.writeAttribute(document.createElement(f), d) } if (!e[f]) { e[f] = Element.extend(document.createElement(f)) } return Element.writeAttribute(e[f].cloneNode(false), d) }; Object.extend(b.Element, a || {}); if (a) { b.Element.prototype = a.prototype } })(this); Element.cache = {}; Element.idCounter = 1; Element.Methods = { visible: function (a) { return $(a).style.display != "none" }, toggle: function (a) { a = $(a); Element[Element.visible(a) ? "hide" : "show"](a); return a }, hide: function (a) { a = $(a); a.style.display = "none"; return a }, show: function (a) { a = $(a); a.style.display = ""; return a }, remove: function (a) { a = $(a); a.parentNode.removeChild(a); return a }, update: (function () { var b = (function () { var e = document.createElement("select"), f = true; e.innerHTML = '<option value="test">test</option>'; if (e.options && e.options[0]) { f = e.options[0].nodeName.toUpperCase() !== "OPTION" } e = null; return f })(); var c = (function () { try { var g = document.createElement("table"); if (g && g.tBodies) { g.innerHTML = "<tbody><tr><td>test</td></tr></tbody>"; var h = typeof g.tBodies[0] == "undefined"; g = null; return h } } catch (f) { return true } })(); var a = (function () { var h = document.createElement("script"), g = false; try { h.appendChild(document.createTextNode("")); g = !h.firstChild || h.firstChild && h.firstChild.nodeType !== 3 } catch (f) { g = true } h = null; return g })(); function d(f, e) { f = $(f); if (e && e.toElement) { e = e.toElement() } if (Object.isElement(e)) { return f.update().insert(e) } e = Object.toHTML(e); var g = f.tagName.toUpperCase(); if (g === "SCRIPT" && a) { f.text = e; return f } if (b || c) { if (g in Element._insertionTranslations.tags) { while (f.firstChild) { f.removeChild(f.firstChild) } Element._getContentFromAnonymousElement(g, e.stripScripts()).each(function (h) { f.appendChild(h) }) } else { f.innerHTML = e.stripScripts() } } else { f.innerHTML = e.stripScripts() } e.evalScripts.bind(e).defer(); return f } return d })(), replace: function (b, a) { b = $(b); if (a && a.toElement) { a = a.toElement() } else { if (!Object.isElement(a)) { a = Object.toHTML(a); var c = b.ownerDocument.createRange(); c.selectNode(b); a.evalScripts.bind(a).defer(); a = c.createContextualFragment(a.stripScripts()) } } b.parentNode.replaceChild(a, b); return b }, insert: function (c, e) { c = $(c); if (Object.isString(e) || Object.isNumber(e) || Object.isElement(e) || (e && (e.toElement || e.toHTML))) { e = { bottom: e } } var b, d, g, a; for (var f in e) { b = e[f]; f = f.toLowerCase(); d = Element._insertionTranslations[f]; if (b && b.toElement) { b = b.toElement() } if (Object.isElement(b)) { d(c, b); continue } b = Object.toHTML(b); g = ((f == "before" || f == "after") ? c.parentNode : c).tagName.toUpperCase(); a = Element._getContentFromAnonymousElement(g, b.stripScripts()); if (f == "top" || f == "after") { a.reverse() } a.each(d.curry(c)); b.evalScripts.bind(b).defer() } return c }, wrap: function (b, c, a) { b = $(b); if (Object.isElement(c)) { $(c).writeAttribute(a || {}) } else { if (Object.isString(c)) { c = new Element(c, a) } else { c = new Element("div", c) } } if (b.parentNode) { b.parentNode.replaceChild(c, b) } c.appendChild(b); return c }, inspect: function (a) { a = $(a); var b = "<" + a.tagName.toLowerCase(); $H({ id: "id", className: "class" }).each(function (d) { var e = d.first(), c = d.last(); var f = (a[e] || "").toString(); if (f) { b += " " + c + "=" + f.inspect(true) } }); return b + ">" }, recursivelyCollect: function (a, c) { a = $(a); var b = []; while (a = a[c]) { if (a.nodeType == 1) { b.push(Element.extend(a)) } } return b }, ancestors: function (a) { return Element.recursivelyCollect(a, "parentNode") }, descendants: function (a) { return Element.select(a, "*") }, firstDescendant: function (a) { a = $(a).firstChild; while (a && a.nodeType != 1) { a = a.nextSibling } return $(a) }, immediateDescendants: function (a) { if (!(a = $(a).firstChild)) { return [] } while (a && a.nodeType != 1) { a = a.nextSibling } if (a) { return [a].concat($(a).nextSiblings()) } return [] }, previousSiblings: function (a) { return Element.recursivelyCollect(a, "previousSibling") }, nextSiblings: function (a) { return Element.recursivelyCollect(a, "nextSibling") }, siblings: function (a) { a = $(a); return Element.previousSiblings(a).reverse().concat(Element.nextSiblings(a)) }, match: function (a, b) { if (Object.isString(b)) { b = new Selector(b) } return b.match($(a)) }, up: function (b, c, d) { b = $(b); if (arguments.length == 1) { return $(b.parentNode) } var a = Element.ancestors(b); return Object.isNumber(c) ? a[c] : Selector.findElement(a, c, d) }, down: function (a, b, c) { a = $(a); if (arguments.length == 1) { return Element.firstDescendant(a) } return Object.isNumber(b) ? Element.descendants(a)[b] : Element.select(a, b)[c || 0] }, previous: function (a, b, c) { a = $(a); if (arguments.length == 1) { return $(Selector.handlers.previousElementSibling(a)) } var d = Element.previousSiblings(a); return Object.isNumber(b) ? d[b] : Selector.findElement(d, b, c) }, next: function (a, b, c) { a = $(a); if (arguments.length == 1) { return $(Selector.handlers.nextElementSibling(a)) } var d = Element.nextSiblings(a); return Object.isNumber(b) ? d[b] : Selector.findElement(d, b, c) }, select: function (b) { var a = Array.prototype.slice.call(arguments, 1); return Selector.findChildElements(b, a) }, adjacent: function (b) { var a = Array.prototype.slice.call(arguments, 1); return Selector.findChildElements(b.parentNode, a).without(b) }, identify: function (a) { a = $(a); var b = Element.readAttribute(a, "id"); if (b) { return b } do { b = "anonymous_element_" + Element.idCounter++ } while ($(b)); Element.writeAttribute(a, "id", b); return b }, readAttribute: function (a, b) { a = $(a); if (Prototype.Browser.IE) { var c = Element._attributeTranslations.read; if (c.values[b]) { return c.values[b](a, b) } if (c.names[b]) { b = c.names[b] } if (b.include(":")) { return (!a.attributes || !a.attributes[b]) ? null : a.attributes[b].value } } return a.getAttribute(b) }, writeAttribute: function (c, d, f) { c = $(c); var b = {}, e = Element._attributeTranslations.write; if (typeof d == "object") { b = d } else { b[d] = Object.isUndefined(f) ? true : f } for (var a in b) { d = e.names[a] || a; f = b[a]; if (e.values[a]) { d = e.values[a](c, f) } if (f === false || f === null) { c.removeAttribute(d) } else { if (f === true) { c.setAttribute(d, d) } else { c.setAttribute(d, f) } } } return c }, getHeight: function (a) { return Element.getDimensions(a).height }, getWidth: function (a) { return Element.getDimensions(a).width }, classNames: function (a) { return new Element.ClassNames(a) }, hasClassName: function (b, a) { if (!(b = $(b))) { return } var c = b.className; return (c.length > 0 && (c == a || new RegExp("(^|\\s)" + a + "(\\s|$)").test(c))) }, addClassName: function (b, a) { if (!(b = $(b))) { return } if (!Element.hasClassName(b, a)) { b.className += (b.className ? " " : "") + a } return b }, removeClassName: function (b, a) { if (!(b = $(b))) { return } b.className = b.className.replace(new RegExp("(^|\\s+)" + a + "(\\s+|$)"), " ").strip(); return b }, toggleClassName: function (b, a) { if (!(b = $(b))) { return } return Element[Element.hasClassName(b, a) ? "removeClassName" : "addClassName"](b, a) }, cleanWhitespace: function (a) { a = $(a); var c = a.firstChild; while (c) { var b = c.nextSibling; if (c.nodeType == 3 && !/\S/.test(c.nodeValue)) { a.removeChild(c) } c = b } return a }, empty: function (a) { return $(a).innerHTML.blank() }, descendantOf: function (b, a) { b = $(b), a = $(a); if (b.compareDocumentPosition) { return (b.compareDocumentPosition(a) & 8) === 8 } if (a.contains) { return a.contains(b) && a !== b } while (b = b.parentNode) { if (b == a) { return true } } return false }, scrollTo: function (a) { a = $(a); var b = Element.cumulativeOffset(a); window.scrollTo(b[0], b[1]); return a }, getStyle: function (b, c) { b = $(b); c = c == "float" ? "cssFloat" : c.camelize(); var d = b.style[c]; if (!d || d == "auto") { var a = document.defaultView.getComputedStyle(b, null); d = a ? a[c] : null } if (c == "opacity") { return d ? parseFloat(d) : 1 } return d == "auto" ? null : d }, getOpacity: function (a) { return $(a).getStyle("opacity") }, setStyle: function (a, e) { a = $(a); var b = a.style, c; if (Object.isString(e)) { a.style.cssText += ";" + e; return e.include("opacity") ? a.setOpacity(e.match(/opacity:\s*(\d?\.?\d*)/)[1]) : a } for (var d in e) { if (d == "opacity") { a.setOpacity(e[d]) } else { b[(d == "float" || d == "cssFloat") ? (Object.isUndefined(b.styleFloat) ? "cssFloat" : "styleFloat") : d] = e[d] } } return a }, setOpacity: function (a, b) { a = $(a); a.style.opacity = (b == 1 || b === "") ? "" : (b < 1e-05) ? 0 : b; return a }, getDimensions: function (b) { b = $(b); var a = Element.getStyle(b, "display"); if (a != "none" && a != null) { return { width: b.offsetWidth, height: b.offsetHeight } } var c = b.style; var g = c.visibility; var f = c.position; var d = c.display; c.visibility = "hidden"; if (f != "fixed") { c.position = "absolute" } c.display = "block"; var h = b.clientWidth; var e = b.clientHeight; c.display = d; c.position = f; c.visibility = g; return { width: h, height: e } }, makePositioned: function (a) { a = $(a); var b = Element.getStyle(a, "position"); if (b == "static" || !b) { a._madePositioned = true; a.style.position = "relative"; if (Prototype.Browser.Opera) { a.style.top = 0; a.style.left = 0 } } return a }, undoPositioned: function (a) { a = $(a); if (a._madePositioned) { a._madePositioned = undefined; a.style.position = a.style.top = a.style.left = a.style.bottom = a.style.right = "" } return a }, makeClipping: function (a) { a = $(a); if (a._overflow) { return a } a._overflow = Element.getStyle(a, "overflow") || "auto"; if (a._overflow !== "hidden") { a.style.overflow = "hidden" } return a }, undoClipping: function (a) { a = $(a); if (!a._overflow) { return a } a.style.overflow = a._overflow == "auto" ? "" : a._overflow; a._overflow = null; return a }, cumulativeOffset: function (a) { var c = 0, b = 0; do { c += a.offsetTop || 0; b += a.offsetLeft || 0; a = a.offsetParent } while (a); return Element._returnOffset(b, c) }, positionedOffset: function (a) { var d = 0, c = 0; do { d += a.offsetTop || 0; c += a.offsetLeft || 0; a = a.offsetParent; if (a) { if (a.tagName.toUpperCase() == "BODY") { break } var b = Element.getStyle(a, "position"); if (b !== "static") { break } } } while (a); return Element._returnOffset(c, d) }, absolutize: function (a) { a = $(a); if (Element.getStyle(a, "position") == "absolute") { return a } var d = Element.positionedOffset(a); var e = d[1]; var c = d[0]; var f = a.clientWidth; var b = a.clientHeight; a._originalLeft = c - parseFloat(a.style.left || 0); a._originalTop = e - parseFloat(a.style.top || 0); a._originalWidth = a.style.width; a._originalHeight = a.style.height; a.style.position = "absolute"; a.style.top = e + "px"; a.style.left = c + "px"; a.style.width = f + "px"; a.style.height = b + "px"; return a }, relativize: function (a) { a = $(a); if (Element.getStyle(a, "position") == "relative") { return a } a.style.position = "relative"; var c = parseFloat(a.style.top || 0) - (a._originalTop || 0); var b = parseFloat(a.style.left || 0) - (a._originalLeft || 0); a.style.top = c + "px"; a.style.left = b + "px"; a.style.height = a._originalHeight; a.style.width = a._originalWidth; return a }, cumulativeScrollOffset: function (a) { var c = 0, b = 0; do { c += a.scrollTop || 0; b += a.scrollLeft || 0; a = a.parentNode } while (a); return Element._returnOffset(b, c) }, getOffsetParent: function (a) { if (a.offsetParent) { return $(a.offsetParent) } if (a == document.body) { return $(a) } while ((a = a.parentNode) && a != document.body) { if (Element.getStyle(a, "position") != "static") { return $(a) } } return $(document.body) }, viewportOffset: function (b) { var d = 0, c = 0; var a = b; do { d += a.offsetTop || 0; c += a.offsetLeft || 0; if (a.offsetParent == document.body && Element.getStyle(a, "position") == "absolute") { break } } while (a = a.offsetParent); a = b; do { if (!Prototype.Browser.Opera || (a.tagName && (a.tagName.toUpperCase() == "BODY"))) { d -= a.scrollTop || 0; c -= a.scrollLeft || 0 } } while (a = a.parentNode); return Element._returnOffset(c, d) }, clonePosition: function (b, f) { var c = Object.extend({ setLeft: true, setTop: true, setWidth: true, setHeight: true, offsetTop: 0, offsetLeft: 0 }, arguments[2] || {}); f = $(f); var d = Element.viewportOffset(f); b = $(b); var a = [0, 0]; var e = null; if (Element.getStyle(b, "position") == "absolute") { e = Element.getOffsetParent(b); a = Element.viewportOffset(e) } if (e == document.body) { a[0] -= document.body.offsetLeft; a[1] -= document.body.offsetTop } if (c.setLeft) { b.style.left = (d[0] - a[0] + c.offsetLeft) + "px" } if (c.setTop) { b.style.top = (d[1] - a[1] + c.offsetTop) + "px" } if (c.setWidth) { b.style.width = f.offsetWidth + "px" } if (c.setHeight) { b.style.height = f.offsetHeight + "px" } return b } }; Object.extend(Element.Methods, { getElementsBySelector: Element.Methods.select, childElements: Element.Methods.immediateDescendants }); Element._attributeTranslations = { write: { names: { className: "class", htmlFor: "for" }, values: {} } }; if (Prototype.Browser.Opera) { Element.Methods.getStyle = Element.Methods.getStyle.wrap(function (c, b, e) { switch (e) { case "left": case "top": case "right": case "bottom": if (c(b, "position") === "static") { return null } case "height": case "width": if (!Element.visible(b)) { return null } var a = parseInt(c(b, e), 10); if (a !== b["offset" + e.capitalize()]) { return a + "px" } var d; if (e === "height") { d = ["border-top-width", "padding-top", "padding-bottom", "border-bottom-width"] } else { d = ["border-left-width", "padding-left", "padding-right", "border-right-width"] } return d.inject(a, function (f, g) { var h = c(b, g); return h === null ? f : f - parseInt(h, 10) }) + "px"; default: return c(b, e) } }); Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(function (c, b, a) { if (a === "title") { return b.title } return c(b, a) }) } else { if (Prototype.Browser.IE) { Element.Methods.getOffsetParent = Element.Methods.getOffsetParent.wrap(function (d, b) { b = $(b); try { b.offsetParent } catch (a) { return $(document.body) } var c = b.getStyle("position"); if (c !== "static") { return d(b) } b.setStyle({ position: "relative" }); var f = d(b); b.setStyle({ position: c }); return f }); $w("positionedOffset viewportOffset").each(function (a) { Element.Methods[a] = Element.Methods[a].wrap(function (g, c) { c = $(c); try { c.offsetParent } catch (b) { return Element._returnOffset(0, 0) } var f = c.getStyle("position"); if (f !== "static") { return g(c) } var d = c.getOffsetParent(); if (d && d.getStyle("position") === "fixed") { d.setStyle({ zoom: 1 }) } c.setStyle({ position: "relative" }); var h = g(c); c.setStyle({ position: f }); return h }) }); Element.Methods.cumulativeOffset = Element.Methods.cumulativeOffset.wrap(function (c, b) { try { b.offsetParent } catch (a) { return Element._returnOffset(0, 0) } return c(b) }); Element.Methods.getStyle = function (a, b) { a = $(a); b = (b == "float" || b == "cssFloat") ? "styleFloat" : b.camelize(); var c = a.style[b]; if (!c && a.currentStyle) { c = a.currentStyle[b] } if (b == "opacity") { if (c = (a.getStyle("filter") || "").match(/alpha\(opacity=(.*)\)/)) { if (c[1]) { return parseFloat(c[1]) / 100 } } return 1 } if (c == "auto") { if ((b == "width" || b == "height") && (a.getStyle("display") != "none")) { return a["offset" + b.capitalize()] + "px" } return null } return c }; Element.Methods.setOpacity = function (b, f) { function d(g) { return g.replace(/alpha\([^\)]*\)/gi, "") } b = $(b); var a = b.currentStyle; if ((a && !a.hasLayout) || (!a && b.style.zoom == "normal")) { b.style.zoom = 1 } var c = b.getStyle("filter"), e = b.style; if (f == 1 || f === "") { (c = d(c)) ? e.filter = c : e.removeAttribute("filter"); return b } else { if (f < 1e-05) { f = 0 } } e.filter = d(c) + "alpha(opacity=" + (f * 100) + ")"; return b }; Element._attributeTranslations = (function () { var a = "className"; var c = "for"; var b = document.createElement("div"); b.setAttribute(a, "x"); if (b.className !== "x") { b.setAttribute("class", "x"); if (b.className === "x") { a = "class" } } b = null; b = document.createElement("label"); b.setAttribute(c, "x"); if (b.htmlFor !== "x") { b.setAttribute("htmlFor", "x"); if (b.htmlFor === "x") { c = "htmlFor" } } b = null; return { read: { names: { "class": a, className: a, "for": c, htmlFor: c }, values: { _getAttr: function (e, d) { return e.getAttribute(d) }, _getAttr2: function (e, d) { return e.getAttribute(d, 2) }, _getAttrNode: function (e, d) { var f = e.getAttributeNode(d); return f ? f.value : "" }, _getEv: (function () { var d = document.createElement("div"); d.onclick = Prototype.emptyFunction; var g = d.getAttribute("onclick"); var e; if (String(g).indexOf("{") > -1) { e = function (h, f) { f = h.getAttribute(f); if (!f) { return null } f = f.toString(); f = f.split("{")[1]; f = f.split("}")[0]; return f.strip() } } else { if (g === "") { e = function (h, f) { f = h.getAttribute(f); if (!f) { return null } return f.strip() } } } d = null; return e })(), _flag: function (e, d) { return $(e).hasAttribute(d) ? d : null }, style: function (d) { return d.style.cssText.toLowerCase() }, title: function (d) { return d.title } } } } })(); Element._attributeTranslations.write = { names: Object.extend({ cellpadding: "cellPadding", cellspacing: "cellSpacing" }, Element._attributeTranslations.read.names), values: { checked: function (a, b) { a.checked = !!b }, style: function (a, b) { a.style.cssText = b ? b : "" } } }; Element._attributeTranslations.has = {}; $w("colSpan rowSpan vAlign dateTime accessKey tabIndex encType maxLength readOnly longDesc frameBorder").each(function (a) { Element._attributeTranslations.write.names[a.toLowerCase()] = a; Element._attributeTranslations.has[a.toLowerCase()] = a }); (function (a) { Object.extend(a, { href: a._getAttr2, src: a._getAttr2, type: a._getAttr, action: a._getAttrNode, disabled: a._flag, checked: a._flag, readonly: a._flag, multiple: a._flag, onload: a._getEv, onunload: a._getEv, onclick: a._getEv, ondblclick: a._getEv, onmousedown: a._getEv, onmouseup: a._getEv, onmouseover: a._getEv, onmousemove: a._getEv, onmouseout: a._getEv, onfocus: a._getEv, onblur: a._getEv, onkeypress: a._getEv, onkeydown: a._getEv, onkeyup: a._getEv, onsubmit: a._getEv, onreset: a._getEv, onselect: a._getEv, onchange: a._getEv }) })(Element._attributeTranslations.read.values); if (Prototype.BrowserFeatures.ElementExtensions) { (function () { function a(b) { var e = b.getElementsByTagName("*"), f = []; for (var c = 0, d; d = e[c]; c++) { if (d.tagName !== "!") { f.push(d) } } return f } Element.Methods.down = function (b, c, d) { b = $(b); if (arguments.length == 1) { return b.firstDescendant() } return Object.isNumber(c) ? a(b)[c] : Element.select(b, c)[d || 0] } })() } } else { if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent)) { Element.Methods.setOpacity = function (a, b) { a = $(a); a.style.opacity = (b == 1) ? 0.999999 : (b === "") ? "" : (b < 1e-05) ? 0 : b; return a } } else { if (Prototype.Browser.WebKit) { Element.Methods.setOpacity = function (b, d) { b = $(b); b.style.opacity = (d == 1 || d === "") ? "" : (d < 1e-05) ? 0 : d; if (d == 1) { if (b.tagName.toUpperCase() == "IMG" && b.width) { b.width++; b.width-- } else { try { var c = document.createTextNode(" "); b.appendChild(c); b.removeChild(c) } catch (a) { } } } return b }; Element.Methods.cumulativeOffset = function (a) { var c = 0, b = 0; do { c += a.offsetTop || 0; b += a.offsetLeft || 0; if (a.offsetParent == document.body) { if (Element.getStyle(a, "position") == "absolute") { break } } a = a.offsetParent } while (a); return Element._returnOffset(b, c) } } } } } if ("outerHTML" in document.documentElement) { Element.Methods.replace = function (b, a) { b = $(b); if (a && a.toElement) { a = a.toElement() } if (Object.isElement(a)) { b.parentNode.replaceChild(a, b); return b } a = Object.toHTML(a); var e = b.parentNode, f = e.tagName.toUpperCase(); if (Element._insertionTranslations.tags[f]) { var d = b.next(); var c = Element._getContentFromAnonymousElement(f, a.stripScripts()); e.removeChild(b); if (d) { c.each(function (g) { e.insertBefore(g, d) }) } else { c.each(function (g) { e.appendChild(g) }) } } else { b.outerHTML = a.stripScripts() } a.evalScripts.bind(a).defer(); return b } } Element._returnOffset = function (a, c) { var b = [a, c]; b.left = a; b.top = c; return b }; Element._getContentFromAnonymousElement = function (d, b) { var a = new Element("div"), c = Element._insertionTranslations.tags[d]; if (c) { a.innerHTML = c[0] + b + c[1]; c[2].times(function () { a = a.firstChild }) } else { a.innerHTML = b } return $A(a.childNodes) }; Element._insertionTranslations = { before: function (a, b) { a.parentNode.insertBefore(b, a) }, top: function (a, b) { a.insertBefore(b, a.firstChild) }, bottom: function (a, b) { a.appendChild(b) }, after: function (a, b) { a.parentNode.insertBefore(b, a.nextSibling) }, tags: { TABLE: ["<table>", "</table>", 1], TBODY: ["<table><tbody>", "</tbody></table>", 2], TR: ["<table><tbody><tr>", "</tr></tbody></table>", 3], TD: ["<table><tbody><tr><td>", "</td></tr></tbody></table>", 4], SELECT: ["<select>", "</select>", 1] } }; (function () { var a = Element._insertionTranslations.tags; Object.extend(a, { THEAD: a.TBODY, TFOOT: a.TBODY, TH: a.TD }) })(); Element.Methods.Simulated = { hasAttribute: function (b, a) { a = Element._attributeTranslations.has[a] || a; var c = $(b).getAttributeNode(a); return !!(c && c.specified) } }; Element.Methods.ByTag = {}; Object.extend(Element, Element.Methods); (function (a) { if (!Prototype.BrowserFeatures.ElementExtensions && a.__proto__) { window.HTMLElement = {}; window.HTMLElement.prototype = a.__proto__; Prototype.BrowserFeatures.ElementExtensions = true } a = null })(document.createElement("div")); Element.extend = (function () { function b(k) { if (typeof window.Element != "undefined") { var j = window.Element.prototype; if (j) { var h = "_" + (Math.random() + "").slice(2); var g = document.createElement(k); j[h] = "x"; var i = (g[h] !== "x"); delete j[h]; g = null; return i } } return false } function d(g, h) { for (var i in h) { var j = h[i]; if (Object.isFunction(j) && !(i in g)) { g[i] = j.methodize() } } } var e = b("object"); if (Prototype.BrowserFeatures.SpecificElementExtensions) { if (e) { return function (g) { if (g && typeof g._extendedByPrototype == "undefined") { var h = g.tagName; if (h && (/^(?:object|applet|embed)$/i.test(h))) { d(g, Element.Methods); d(g, Element.Methods.Simulated); d(g, Element.Methods.ByTag[h.toUpperCase()]) } } return g } } return Prototype.K } var f = {}, a = Element.Methods.ByTag; var c = Object.extend(function (g) { if (!g || typeof g._extendedByPrototype != "undefined" || g.nodeType != 1 || g == window) { return g } var h = Object.clone(f), i = g.tagName.toUpperCase(); if (a[i]) { Object.extend(h, a[i]) } d(g, h); g._extendedByPrototype = Prototype.emptyFunction; return g }, { refresh: function () { if (!Prototype.BrowserFeatures.ElementExtensions) { Object.extend(f, Element.Methods); Object.extend(f, Element.Methods.Simulated) } } }); c.refresh(); return c })(); Element.hasAttribute = function (b, a) { if (b.hasAttribute) { return b.hasAttribute(a) } return Element.Methods.Simulated.hasAttribute(b, a) }; Element.addMethods = function (g) { var d = Prototype.BrowserFeatures, h = Element.Methods.ByTag; if (!g) { Object.extend(Form, Form.Methods); Object.extend(Form.Element, Form.Element.Methods); Object.extend(Element.Methods.ByTag, { FORM: Object.clone(Form.Methods), INPUT: Object.clone(Form.Element.Methods), SELECT: Object.clone(Form.Element.Methods), TEXTAREA: Object.clone(Form.Element.Methods) }) } if (arguments.length == 2) { var j = g; g = arguments[1] } if (!j) { Object.extend(Element.Methods, g || {}) } else { if (Object.isArray(j)) { j.each(c) } else { c(j) } } function c(k) { k = k.toUpperCase(); if (!Element.Methods.ByTag[k]) { Element.Methods.ByTag[k] = {} } Object.extend(Element.Methods.ByTag[k], g) } function a(l, k, m) { m = m || false; for (var n in l) { var o = l[n]; if (!Object.isFunction(o)) { continue } if (!m || !(n in k)) { k[n] = o.methodize() } } } function e(n) { var l; var o = { OPTGROUP: "OptGroup", TEXTAREA: "TextArea", P: "Paragraph", FIELDSET: "FieldSet", UL: "UList", OL: "OList", DL: "DList", DIR: "Directory", H1: "Heading", H2: "Heading", H3: "Heading", H4: "Heading", H5: "Heading", H6: "Heading", Q: "Quote", INS: "Mod", DEL: "Mod", A: "Anchor", IMG: "Image", CAPTION: "TableCaption", COL: "TableCol", COLGROUP: "TableCol", THEAD: "TableSection", TFOOT: "TableSection", TBODY: "TableSection", TR: "TableRow", TH: "TableCell", TD: "TableCell", FRAMESET: "FrameSet", IFRAME: "IFrame" }; if (o[n]) { l = "HTML" + o[n] + "Element" } if (window[l]) { return window[l] } l = "HTML" + n + "Element"; if (window[l]) { return window[l] } l = "HTML" + n.capitalize() + "Element"; if (window[l]) { return window[l] } var k = document.createElement(n); var m = k.__proto__ || k.constructor.prototype; k = null; return m } var b = window.HTMLElement ? HTMLElement.prototype : Element.prototype; if (d.ElementExtensions) { a(Element.Methods, b); a(Element.Methods.Simulated, b, true) } if (d.SpecificElementExtensions) { for (var i in Element.Methods.ByTag) { var f = e(i); if (Object.isUndefined(f)) { continue } a(h[i], f.prototype) } } Object.extend(Element, Element.Methods); delete Element.ByTag; if (Element.extend.refresh) { Element.extend.refresh() } Element.cache = {} }; document.viewport = { getDimensions: function () { return { width: this.getWidth(), height: this.getHeight() } }, getScrollOffsets: function () { return Element._returnOffset(window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft, window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop) } }; (function (g) { var a = Prototype.Browser, c = document, d, f = {}; function e() { if (a.WebKit && !c.evaluate) { return document } if (a.Opera && window.parseFloat(window.opera.version()) < 9.5) { return document.body } return document.documentElement } function b(h) { if (!d) { d = e() } f[h] = "client" + h; g["get" + h] = function () { return d[f[h]] }; return g["get" + h]() } g.getWidth = b.curry("Width"); g.getHeight = b.curry("Height") })(document.viewport); Element.Storage = { UID: 1 }; Element.addMethods({ getStorage: function (a) { if (!(a = $(a))) { return } var b; if (a === window) { b = 0 } else { if (typeof a._prototypeUID === "undefined") { a._prototypeUID = [Element.Storage.UID++] } b = a._prototypeUID[0] } if (!Element.Storage[b]) { Element.Storage[b] = $H() } return Element.Storage[b] }, store: function (a, b, c) { if (!(a = $(a))) { return } if (arguments.length === 2) { Element.getStorage(a).update(b) } else { Element.getStorage(a).set(b, c) } return a }, retrieve: function (b, d, a) { if (!(b = $(b))) { return } var c = Element.getStorage(b), e = c.get(d); if (Object.isUndefined(e)) { c.set(d, a); e = a } return e }, clone: function (d, b) { if (!(d = $(d))) { return } var a = d.cloneNode(b); a._prototypeUID = void 0; if (b) { var c = Element.select(a, "*"), e = c.length; while (e--) { c[e]._prototypeUID = void 0 } } return Element.extend(a) } }); var Selector = Class.create({ initialize: function (a) { this.expression = a.strip(); if (this.shouldUseSelectorsAPI()) { this.mode = "selectorsAPI" } else { if (this.shouldUseXPath()) { this.mode = "xpath"; this.compileXPathMatcher() } else { this.mode = "normal"; this.compileMatcher() } } }, shouldUseXPath: (function () { var a = (function () { var c = false; if (document.evaluate && window.XPathResult) { var b = document.createElement("div"); b.innerHTML = "<ul><li></li></ul><div><ul><li></li></ul></div>"; var e = ".//*[local-name()='ul' or local-name()='UL']//*[local-name()='li' or local-name()='LI']"; var d = document.evaluate(e, b, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null); c = (d.snapshotLength !== 2); b = null } return c })(); return function () { if (!Prototype.BrowserFeatures.XPath) { return false } var b = this.expression; if (Prototype.Browser.WebKit && (b.include("-of-type") || b.include(":empty"))) { return false } if ((/(\[[\w-]*?:|:checked)/).test(b)) { return false } if (a) { return false } return true } })(), shouldUseSelectorsAPI: function () { if (!Prototype.BrowserFeatures.SelectorsAPI) { return false } if (Selector.CASE_INSENSITIVE_CLASS_NAMES) { return false } if (!Selector._div) { Selector._div = new Element("div") } try { Selector._div.querySelector(this.expression) } catch (a) { return false } return true }, compileMatcher: function () { var e = this.expression, ps = Selector.patterns, h = Selector.handlers, c = Selector.criteria, le, p, m, len = ps.length, name; if (Selector._cache[e]) { this.matcher = Selector._cache[e]; return } this.matcher = ["this.matcher = function(root) {", "var r = root, h = Selector.handlers, c = false, n;"]; while (e && le != e && (/\S/).test(e)) { le = e; for (var i = 0; i < len; i++) { p = ps[i].re; name = ps[i].name; if (m = e.match(p)) { this.matcher.push(Object.isFunction(c[name]) ? c[name](m) : new Template(c[name]).evaluate(m)); e = e.replace(m[0], ""); break } } } this.matcher.push("return h.unique(n);\n}"); eval(this.matcher.join("\n")); Selector._cache[this.expression] = this.matcher }, compileXPathMatcher: function () { var a = this.expression, h = Selector.patterns, j = Selector.xpath, c, f, d = h.length, g; if (Selector._cache[a]) { this.xpath = Selector._cache[a]; return } this.matcher = [".//*"]; while (a && c != a && (/\S/).test(a)) { c = a; for (var b = 0; b < d; b++) { g = h[b].name; if (f = a.match(h[b].re)) { this.matcher.push(Object.isFunction(j[g]) ? j[g](f) : new Template(j[g]).evaluate(f)); a = a.replace(f[0], ""); break } } } this.xpath = this.matcher.join(""); Selector._cache[this.expression] = this.xpath }, findElements: function (f) { f = f || document; var a = this.expression, d; switch (this.mode) { case "selectorsAPI": if (f !== document) { var c = f.id, b = $(f).identify(); b = b.replace(/([\.:])/g, "\\$1"); a = "#" + b + " " + a } d = $A(f.querySelectorAll(a)).map(Element.extend); f.id = c; return d; case "xpath": return document._getElementsByXPath(this.xpath, f); default: return this.matcher(f) } }, match: function (c) { this.tokens = []; var b = this.expression, o = Selector.patterns, a = Selector.assertions; var f, n, h, g = o.length, l; while (b && f !== b && (/\S/).test(b)) { f = b; for (var d = 0; d < g; d++) { n = o[d].re; l = o[d].name; if (h = b.match(n)) { if (a[l]) { this.tokens.push([l, Object.clone(h)]); b = b.replace(h[0], "") } else { return this.findElements(document).include(c) } } } } var j = true, l, k; for (var d = 0, q; q = this.tokens[d]; d++) { l = q[0], k = q[1]; if (!Selector.assertions[l](c, k)) { j = false; break } } return j }, toString: function () { return this.expression }, inspect: function () { return "#<Selector:" + this.expression.inspect() + ">" } }); if (Prototype.BrowserFeatures.SelectorsAPI && document.compatMode === "BackCompat") { Selector.CASE_INSENSITIVE_CLASS_NAMES = (function () { var a = document.createElement("div"), c = document.createElement("span"); a.id = "prototype_test_id"; c.className = "Test"; a.appendChild(c); var b = (a.querySelector("#prototype_test_id .test") !== null); a = c = null; return b })() } Object.extend(Selector, { _cache: {}, xpath: { descendant: "//*", child: "/*", adjacent: "/following-sibling::*[1]", laterSibling: "/following-sibling::*", tagName: function (a) { if (a[1] == "*") { return "" } return "[local-name()='" + a[1].toLowerCase() + "' or local-name()='" + a[1].toUpperCase() + "']" }, className: "[contains(concat(' ', @class, ' '), ' #{1} ')]", id: "[@id='#{1}']", attrPresence: function (a) { a[1] = a[1].toLowerCase(); return new Template("[@#{1}]").evaluate(a) }, attr: function (a) { a[1] = a[1].toLowerCase(); a[3] = a[5] || a[6]; return new Template(Selector.xpath.operators[a[2]]).evaluate(a) }, pseudo: function (b) { var a = Selector.xpath.pseudos[b[1]]; if (!a) { return "" } if (Object.isFunction(a)) { return a(b) } return new Template(Selector.xpath.pseudos[b[1]]).evaluate(b) }, operators: { "=": "[@#{1}='#{3}']", "!=": "[@#{1}!='#{3}']", "^=": "[starts-with(@#{1}, '#{3}')]", "$=": "[substring(@#{1}, (string-length(@#{1}) - string-length('#{3}') + 1))='#{3}']", "*=": "[contains(@#{1}, '#{3}')]", "~=": "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]", "|=": "[contains(concat('-', @#{1}, '-'), '-#{3}-')]" }, pseudos: { "first-child": "[not(preceding-sibling::*)]", "last-child": "[not(following-sibling::*)]", "only-child": "[not(preceding-sibling::* or following-sibling::*)]", empty: "[count(*) = 0 and (count(text()) = 0)]", checked: "[@checked]", disabled: "[(@disabled) and (@type!='hidden')]", enabled: "[not(@disabled) and (@type!='hidden')]", not: function (g) { var a = g[6], j = Selector.patterns, l = Selector.xpath, d, k, f = j.length, h; var b = []; while (a && d != a && (/\S/).test(a)) { d = a; for (var c = 0; c < f; c++) { h = j[c].name; if (g = a.match(j[c].re)) { k = Object.isFunction(l[h]) ? l[h](g) : new Template(l[h]).evaluate(g); b.push("(" + k.substring(1, k.length - 1) + ")"); a = a.replace(g[0], ""); break } } } return "[not(" + b.join(" and ") + ")]" }, "nth-child": function (a) { return Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", a) }, "nth-last-child": function (a) { return Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", a) }, "nth-of-type": function (a) { return Selector.xpath.pseudos.nth("position() ", a) }, "nth-last-of-type": function (a) { return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", a) }, "first-of-type": function (a) { a[6] = "1"; return Selector.xpath.pseudos["nth-of-type"](a) }, "last-of-type": function (a) { a[6] = "1"; return Selector.xpath.pseudos["nth-last-of-type"](a) }, "only-of-type": function (a) { var b = Selector.xpath.pseudos; return b["first-of-type"](a) + b["last-of-type"](a) }, nth: function (f, g) { var h, e = g[6], i; if (e == "even") { e = "2n+0" } if (e == "odd") { e = "2n+1" } if (h = e.match(/^(\d+)$/)) { return "[" + f + "= " + h[1] + "]" } if (h = e.match(/^(-?\d*)?n(([+-])(\d+))?/)) { if (h[1] == "-") { h[1] = -1 } var c = h[1] ? Number(h[1]) : 1; var d = h[2] ? Number(h[2]) : 0; i = "[((#{fragment} - #{b}) mod #{a} = 0) and ((#{fragment} - #{b}) div #{a} >= 0)]"; return new Template(i).evaluate({ fragment: f, a: c, b: d }) } } } }, criteria: { tagName: 'n = h.tagName(n, r, "#{1}", c);      c = false;', className: 'n = h.className(n, r, "#{1}", c);    c = false;', id: 'n = h.id(n, r, "#{1}", c);           c = false;', attrPresence: 'n = h.attrPresence(n, r, "#{1}", c); c = false;', attr: function (a) { a[3] = (a[5] || a[6]); return new Template('n = h.attr(n, r, "#{1}", "#{3}", "#{2}", c); c = false;').evaluate(a) }, pseudo: function (a) { if (a[6]) { a[6] = a[6].replace(/"/g, '\\"') } return new Template('n = h.pseudo(n, "#{1}", "#{6}", r, c); c = false;').evaluate(a) }, descendant: 'c = "descendant";', child: 'c = "child";', adjacent: 'c = "adjacent";', laterSibling: 'c = "laterSibling";' }, patterns: [{ name: "laterSibling", re: /^\s*~\s*/ }, { name: "child", re: /^\s*>\s*/ }, { name: "adjacent", re: /^\s*\+\s*/ }, { name: "descendant", re: /^\s/ }, { name: "tagName", re: /^\s*(\*|[\w\-]+)(\b|$)?/ }, { name: "id", re: /^#([\w\-\*]+)(\b|$)/ }, { name: "className", re: /^\.([\w\-\*]+)(\b|$)/ }, { name: "pseudo", re: /^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)abled|not)(\((.*?)\))?(\b|$|(?=\s|[:+~>]))/ }, { name: "attrPresence", re: /^\[((?:[\w-]+:)?[\w-]+)\]/ }, { name: "attr", re: /\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=)\s*((['"])([^\4]*?)\4|([^'"][^\]]*?)))?\]/ }], assertions: { tagName: function (a, b) { return b[1].toUpperCase() == a.tagName.toUpperCase() }, className: function (a, b) { return Element.hasClassName(a, b[1]) }, id: function (a, b) { return a.id === b[1] }, attrPresence: function (a, b) { return Element.hasAttribute(a, b[1]) }, attr: function (a, b) { var c = Element.readAttribute(a, b[1]); return c && Selector.operators[b[2]](c, b[5] || b[6]) } }, handlers: { concat: function (c, d) { for (var e = 0, f; f = d[e]; e++) { c.push(f) } return c }, mark: function (d) { var a = Prototype.emptyFunction; for (var b = 0, c; c = d[b]; b++) { c._countedByPrototype = a } return d }, unmark: (function () { var a = (function () { var b = document.createElement("div"), c = false, d = "_countedByPrototype", e = "x"; b[d] = e; c = (b.getAttribute(d) === e); b = null; return c })(); return a ? function (d) { for (var b = 0, c; c = d[b]; b++) { c.removeAttribute("_countedByPrototype") } return d } : function (d) { for (var b = 0, c; c = d[b]; b++) { c._countedByPrototype = void 0 } return d } })(), index: function (f, g, e) { f._countedByPrototype = Prototype.emptyFunction; if (g) { for (var d = f.childNodes, a = d.length - 1, b = 1; a >= 0; a--) { var c = d[a]; if (c.nodeType == 1 && (!e || c._countedByPrototype)) { c.nodeIndex = b++ } } } else { for (var a = 0, b = 1, d = f.childNodes; c = d[a]; a++) { if (c.nodeType == 1 && (!e || c._countedByPrototype)) { c.nodeIndex = b++ } } } }, unique: function (d) { if (d.length == 0) { return d } var e = [], c; for (var a = 0, b = d.length; a < b; a++) { if (typeof (c = d[a])._countedByPrototype == "undefined") { c._countedByPrototype = Prototype.emptyFunction; e.push(Element.extend(c)) } } return Selector.handlers.unmark(e) }, descendant: function (d) { var a = Selector.handlers; for (var b = 0, e = [], c; c = d[b]; b++) { a.concat(e, c.getElementsByTagName("*")) } return e }, child: function (f) { var b = Selector.handlers; for (var c = 0, g = [], e; e = f[c]; c++) { for (var d = 0, a; a = e.childNodes[d]; d++) { if (a.nodeType == 1 && a.tagName != "!") { g.push(a) } } } return g }, adjacent: function (d) { for (var a = 0, e = [], c; c = d[a]; a++) { var b = this.nextElementSibling(c); if (b) { e.push(b) } } return e }, laterSibling: function (d) { var a = Selector.handlers; for (var b = 0, e = [], c; c = d[b]; b++) { a.concat(e, Element.nextSiblings(c)) } return e }, nextElementSibling: function (a) { while (a = a.nextSibling) { if (a.nodeType == 1) { return a } } return null }, previousElementSibling: function (a) { while (a = a.previousSibling) { if (a.nodeType == 1) { return a } } return null }, tagName: function (e, g, j, a) { var k = j.toUpperCase(); var f = [], b = Selector.handlers; if (e) { if (a) { if (a == "descendant") { for (var c = 0, d; d = e[c]; c++) { b.concat(f, d.getElementsByTagName(j)) } return f } else { e = this[a](e) } if (j == "*") { return e } } for (var c = 0, d; d = e[c]; c++) { if (d.tagName.toUpperCase() === k) { f.push(d) } } return f } else { return g.getElementsByTagName(j) } }, id: function (g, k, d, a) { var l = $(d), b = Selector.handlers; if (k == document) { if (!l) { return [] } if (!g) { return [l] } } else { if (!k.sourceIndex || k.sourceIndex < 1) { var g = k.getElementsByTagName("*"); for (var e = 0, f; f = g[e]; e++) { if (f.id === d) { return [f] } } } } if (g) { if (a) { if (a == "child") { for (var c = 0, f; f = g[c]; c++) { if (l.parentNode == f) { return [l] } } } else { if (a == "descendant") { for (var c = 0, f; f = g[c]; c++) { if (Element.descendantOf(l, f)) { return [l] } } } else { if (a == "adjacent") { for (var c = 0, f; f = g[c]; c++) { if (Selector.handlers.previousElementSibling(l) == f) { return [l] } } } else { g = b[a](g) } } } } for (var c = 0, f; f = g[c]; c++) { if (f == l) { return [l] } } return [] } return (l && Element.descendantOf(l, k)) ? [l] : [] }, className: function (c, d, a, b) { if (c && b) { c = this[b](c) } return Selector.handlers.byClassName(c, d, a) }, byClassName: function (f, h, a) { if (!f) { f = Selector.handlers.descendant([h]) } var c = " " + a + " "; for (var b = 0, g = [], d, e; d = f[b]; b++) { e = d.className; if (e.length == 0) { continue } if (e == a || (" " + e + " ").include(c)) { g.push(d) } } return g }, attrPresence: function (e, g, a, b) { if (!e) { e = g.getElementsByTagName("*") } if (e && b) { e = this[b](e) } var f = []; for (var c = 0, d; d = e[c]; c++) { if (Element.hasAttribute(d, a)) { f.push(d) } } return f }, attr: function (f, k, a, l, h, b) { if (!f) { f = k.getElementsByTagName("*") } if (f && b) { f = this[b](f) } var c = Selector.operators[h], j = []; for (var d = 0, e; e = f[d]; d++) { var g = Element.readAttribute(e, a); if (g === null) { continue } if (c(g, l)) { j.push(e) } } return j }, pseudo: function (c, b, e, d, a) { if (c && a) { c = this[a](c) } if (!c) { c = d.getElementsByTagName("*") } return Selector.pseudos[b](c, e, d) } }, pseudos: { "first-child": function (c, f, e) { for (var a = 0, d = [], b; b = c[a]; a++) { if (Selector.handlers.previousElementSibling(b)) { continue } d.push(b) } return d }, "last-child": function (c, f, e) { for (var a = 0, d = [], b; b = c[a]; a++) { if (Selector.handlers.nextElementSibling(b)) { continue } d.push(b) } return d }, "only-child": function (d, g, f) { var a = Selector.handlers; for (var b = 0, e = [], c; c = d[b]; b++) { if (!a.previousElementSibling(c) && !a.nextElementSibling(c)) { e.push(c) } } return e }, "nth-child": function (b, a, c) { return Selector.pseudos.nth(b, a, c) }, "nth-last-child": function (b, a, c) { return Selector.pseudos.nth(b, a, c, true) }, "nth-of-type": function (b, a, c) { return Selector.pseudos.nth(b, a, c, false, true) }, "nth-last-of-type": function (b, a, c) { return Selector.pseudos.nth(b, a, c, true, true) }, "first-of-type": function (b, a, c) { return Selector.pseudos.nth(b, "1", c, false, true) }, "last-of-type": function (b, a, c) { return Selector.pseudos.nth(b, "1", c, true, true) }, "only-of-type": function (b, a, d) { var c = Selector.pseudos; return c["last-of-type"](c["first-of-type"](b, a, d), a, d) }, getIndices: function (c, d, e) { if (c == 0) { return d > 0 ? [d] : [] } return $R(1, e).inject([], function (b, a) { if (0 == (a - d) % c && (a - d) / c >= 0) { b.push(a) } return b }) }, nth: function (s, e, w, v, t) { if (s.length == 0) { return [] } if (e == "even") { e = "2n+0" } if (e == "odd") { e = "2n+1" } var f = Selector.handlers, u = [], k = [], q; f.mark(s); for (var g = 0, r; r = s[g]; g++) { if (!r.parentNode._countedByPrototype) { f.index(r.parentNode, v, t); k.push(r.parentNode) } } if (e.match(/^\d+$/)) { e = Number(e); for (var g = 0, r; r = s[g]; g++) { if (r.nodeIndex == e) { u.push(r) } } } else { if (q = e.match(/^(-?\d*)?n(([+-])(\d+))?/)) { if (q[1] == "-") { q[1] = -1 } var c = q[1] ? Number(q[1]) : 1; var d = q[2] ? Number(q[2]) : 0; var n = Selector.pseudos.getIndices(c, d, s.length); for (var g = 0, r, p = n.length; r = s[g]; g++) { for (var o = 0; o < p; o++) { if (r.nodeIndex == n[o]) { u.push(r) } } } } } f.unmark(s); f.unmark(k); return u }, empty: function (c, f, e) { for (var a = 0, d = [], b; b = c[a]; a++) { if (b.tagName == "!" || b.firstChild) { continue } d.push(b) } return d }, not: function (f, k, j) { var b = Selector.handlers, l, d; var a = new Selector(k).findElements(j); b.mark(a); for (var c = 0, g = [], e; e = f[c]; c++) { if (!e._countedByPrototype) { g.push(e) } } b.unmark(a); return g }, enabled: function (c, f, e) { for (var a = 0, d = [], b; b = c[a]; a++) { if (!b.disabled && (!b.type || b.type !== "hidden")) { d.push(b) } } return d }, disabled: function (c, f, e) { for (var a = 0, d = [], b; b = c[a]; a++) { if (b.disabled) { d.push(b) } } return d }, checked: function (c, f, e) { for (var a = 0, d = [], b; b = c[a]; a++) { if (b.checked) { d.push(b) } } return d } }, operators: { "=": function (a, b) { return a == b }, "!=": function (a, b) { return a != b }, "^=": function (a, b) { return a == b || a && a.startsWith(b) }, "$=": function (a, b) { return a == b || a && a.endsWith(b) }, "*=": function (a, b) { return a == b || a && a.include(b) }, "~=": function (a, b) { return (" " + a + " ").include(" " + b + " ") }, "|=": function (a, b) { return ("-" + (a || "").toUpperCase() + "-").include("-" + (b || "").toUpperCase() + "-") } }, split: function (a) { var b = []; a.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, function (c) { b.push(c[1].strip()) }); return b }, matchElements: function (b, c) { var f = $$(c), d = Selector.handlers; d.mark(f); for (var e = 0, g = [], a; a = b[e]; e++) { if (a._countedByPrototype) { g.push(a) } } d.unmark(f); return g }, findElement: function (a, b, c) { if (Object.isNumber(b)) { c = b; b = false } return Selector.matchElements(a, b || "*")[c || 0] }, findChildElements: function (a, b) { b = Selector.split(b.join(",")); var f = [], c = Selector.handlers; for (var d = 0, e = b.length, g; d < e; d++) { g = new Selector(b[d].strip()); c.concat(f, g.findElements(a)) } return (e > 1) ? c.unique(f) : f } }); if (Prototype.Browser.IE) { Object.extend(Selector.handlers, { concat: function (c, d) { for (var e = 0, f; f = d[e]; e++) { if (f.tagName !== "!") { c.push(f) } } return c } }) } function $$() { return Selector.findChildElements(document, $A(arguments)) } var Form = { reset: function (a) { a = $(a); a.reset(); return a }, serializeElements: function (b, d) { if (typeof d != "object") { d = { hash: !!d } } else { if (Object.isUndefined(d.hash)) { d.hash = true } } var c, g, f = false, e = d.submit; var a = b.inject({}, function (i, h) { if (!h.disabled && h.name) { c = h.name; g = $(h).getValue(); if (g != null && h.type != "file" && (h.type != "submit" || (!f && e !== false && (!e || c == e) && (f = true)))) { if (c in i) { if (!Object.isArray(i[c])) { i[c] = [i[c]] } i[c].push(g) } else { i[c] = g } } } return i }); return d.hash ? a : Object.toQueryString(a) } }; Form.Methods = { serialize: function (a, b) { return Form.serializeElements(Form.getElements(a), b) }, getElements: function (d) { var c = $(d).getElementsByTagName("*"), b, a = [], f = Form.Element.Serializers; for (var e = 0; b = c[e]; e++) { a.push(b) } return a.inject([], function (h, g) { if (f[g.tagName.toLowerCase()]) { h.push(Element.extend(g)) } return h }) }, getInputs: function (a, h, g) { a = $(a); var d = a.getElementsByTagName("input"); if (!h && !g) { return $A(d).map(Element.extend) } for (var b = 0, f = [], e = d.length; b < e; b++) { var c = d[b]; if ((h && c.type != h) || (g && c.name != g)) { continue } f.push(Element.extend(c)) } return f }, disable: function (a) { a = $(a); Form.getElements(a).invoke("disable"); return a }, enable: function (a) { a = $(a); Form.getElements(a).invoke("enable"); return a }, findFirstElement: function (c) { var a = $(c).getElements().findAll(function (d) { return "hidden" != d.type && !d.disabled }); var b = a.findAll(function (d) { return d.hasAttribute("tabIndex") && d.tabIndex >= 0 }).sortBy(function (d) { return d.tabIndex }).first(); return b ? b : a.find(function (d) { return /^(?:input|select|textarea)$/i.test(d.tagName) }) }, focusFirstElement: function (a) { a = $(a); a.findFirstElement().activate(); return a }, request: function (b, c) { b = $(b), c = Object.clone(c || {}); var d = c.parameters, a = b.readAttribute("action") || ""; if (a.blank()) { a = window.location.href } c.parameters = b.serialize(true); if (d) { if (Object.isString(d)) { d = d.toQueryParams() } Object.extend(c.parameters, d) } if (b.hasAttribute("method") && !c.method) { c.method = b.method } return new Ajax.Request(a, c) } }; Form.Element = { focus: function (a) { $(a).focus(); return a }, select: function (a) { $(a).select(); return a } }; Form.Element.Methods = { serialize: function (a) { a = $(a); if (!a.disabled && a.name) { var c = a.getValue(); if (c != undefined) { var b = {}; b[a.name] = c; return Object.toQueryString(b) } } return "" }, getValue: function (a) { a = $(a); var b = a.tagName.toLowerCase(); return Form.Element.Serializers[b](a) }, setValue: function (a, c) { a = $(a); var b = a.tagName.toLowerCase(); Form.Element.Serializers[b](a, c); return a }, clear: function (a) { $(a).value = ""; return a }, present: function (a) { return $(a).value != "" }, activate: function (b) { b = $(b); try { b.focus(); if (b.select && (b.tagName.toLowerCase() != "input" || !(/^(?:button|reset|submit)$/i.test(b.type)))) { b.select() } } catch (a) { } return b }, disable: function (a) { a = $(a); a.disabled = true; return a }, enable: function (a) { a = $(a); a.disabled = false; return a } }; var Field = Form.Element; var $F = Form.Element.Methods.getValue; Form.Element.Serializers = { input: function (a, b) { switch (a.type.toLowerCase()) { case "checkbox": case "radio": return Form.Element.Serializers.inputSelector(a, b); default: return Form.Element.Serializers.textarea(a, b) } }, inputSelector: function (a, b) { if (Object.isUndefined(b)) { return a.checked ? a.value : null } else { a.checked = !!b } }, textarea: function (a, b) { if (Object.isUndefined(b)) { return a.value } else { a.value = b } }, select: function (b, g) { if (Object.isUndefined(g)) { return this[b.type == "select-one" ? "selectOne" : "selectMany"](b) } else { var e, a, f = !Object.isArray(g); for (var c = 0, d = b.length; c < d; c++) { e = b.options[c]; a = this.optionValue(e); if (f) { if (a == g) { e.selected = true; return } } else { e.selected = g.include(a) } } } }, selectOne: function (a) { var b = a.selectedIndex; return b >= 0 ? this.optionValue(a.options[b]) : null }, selectMany: function (a) { var e, c = a.length; if (!c) { return null } for (var b = 0, e = []; b < c; b++) { var d = a.options[b]; if (d.selected) { e.push(this.optionValue(d)) } } return e }, optionValue: function (a) { return Element.extend(a).hasAttribute("value") ? a.value : a.text } }; Abstract.TimedObserver = Class.create(PeriodicalExecuter, { initialize: function ($super, b, c, a) { $super(a, c); this.element = $(b); this.lastValue = this.getValue() }, execute: function () { var a = this.getValue(); if (Object.isString(this.lastValue) && Object.isString(a) ? this.lastValue != a : String(this.lastValue) != String(a)) { this.callback(this.element, a); this.lastValue = a } } }); Form.Element.Observer = Class.create(Abstract.TimedObserver, { getValue: function () { return Form.Element.getValue(this.element) } }); Form.Observer = Class.create(Abstract.TimedObserver, { getValue: function () { return Form.serialize(this.element) } }); Abstract.EventObserver = Class.create({ initialize: function (b, a) { this.element = $(b); this.callback = a; this.lastValue = this.getValue(); if (this.element.tagName.toLowerCase() == "form") { this.registerFormCallbacks() } else { this.registerCallback(this.element) } }, onElementEvent: function () { var a = this.getValue(); if (this.lastValue != a) { this.callback(this.element, a); this.lastValue = a } }, registerFormCallbacks: function () { Form.getElements(this.element).each(this.registerCallback, this) }, registerCallback: function (a) { if (a.type) { switch (a.type.toLowerCase()) { case "checkbox": case "radio": Event.observe(a, "click", this.onElementEvent.bind(this)); break; default: Event.observe(a, "change", this.onElementEvent.bind(this)); break } } } }); Form.Element.EventObserver = Class.create(Abstract.EventObserver, { getValue: function () { return Form.Element.getValue(this.element) } }); Form.EventObserver = Class.create(Abstract.EventObserver, { getValue: function () { return Form.serialize(this.element) } }); (function () { var l = { KEY_BACKSPACE: 8, KEY_TAB: 9, KEY_RETURN: 13, KEY_ESC: 27, KEY_LEFT: 37, KEY_UP: 38, KEY_RIGHT: 39, KEY_DOWN: 40, KEY_DELETE: 46, KEY_HOME: 36, KEY_END: 35, KEY_SPACE: 32, KEY_PAGEUP: 33, KEY_PAGEDOWN: 34, KEY_INSERT: 45, cache: {} }; var j = document.documentElement; var u = "onmouseenter" in j && "onmouseleave" in j; var o = function (B) { return false }; if (window.attachEvent) { if (window.addEventListener) { o = function (B) { return !(B instanceof window.Event) } } else { o = function (B) { return true } } } var d; function e(C, B) { return C.which ? (C.which === B + 1) : (C.button === B) } var s = { 0: 1, 1: 4, 2: 2 }; function f(C, B) { return C.button === s[B] } function g(C, B) { switch (B) { case 0: return C.which == 1 && !C.metaKey; case 1: return C.which == 2 || (C.which == 1 && C.metaKey); case 2: return C.which == 3; default: return false } } if (window.attachEvent) { if (!window.addEventListener) { d = f } else { d = function (C, B) { return o(C) ? f(C, B) : e(C, B) } } } else { if (Prototype.Browser.WebKit) { d = g } else { d = e } } function p(B) { return d(B, 0) } function q(B) { return d(B, 1) } function r(B) { return d(B, 2) } function k(C) { C = l.extend(C); var D = C.target, E = C.type, B = C.currentTarget; if (B && B.tagName) { if (E === "load" || E === "error" || (E === "click" && B.tagName.toLowerCase() === "input" && B.type === "radio")) { D = B } } if (D.nodeType == Node.TEXT_NODE) { D = D.parentNode } return Element.extend(D) } function m(D, E) { var B = l.element(D); if (!E) { return B } var C = [B].concat(B.ancestors()); return Selector.findElement(C, E, 0) } function w(B) { return { x: x(B), y: y(B) } } function x(D) { var C = document.documentElement, B = document.body || { scrollLeft: 0 }; return D.pageX || (D.clientX + (C.scrollLeft || B.scrollLeft) - (C.clientLeft || 0)) } function y(D) { var C = document.documentElement, B = document.body || { scrollTop: 0 }; return D.pageY || (D.clientY + (C.scrollTop || B.scrollTop) - (C.clientTop || 0)) } function z(B) { l.extend(B); B.preventDefault(); B.stopPropagation(); B.stopped = true } l.Methods = { isLeftClick: p, isMiddleClick: q, isRightClick: r, element: k, findElement: m, pointer: w, pointerX: x, pointerY: y, stop: z }; var t = Object.keys(l.Methods).inject({}, function (B, C) { B[C] = l.Methods[C].methodize(); return B }); if (window.attachEvent && !window.addEventListener) { function h(C) { var B; switch (C.type) { case "mouseover": B = C.fromElement; break; case "mouseout": B = C.toElement; break; default: return null } return Element.extend(B) } Object.extend(t, { stopPropagation: function () { this.cancelBubble = true }, preventDefault: function () { this.returnValue = false }, inspect: function () { return "[object Event]" } }); l.extend = function (C, B) { if (!C) { return false } if (C._extendedByPrototype) { return C } C._extendedByPrototype = Prototype.emptyFunction; var D = l.pointer(C); Object.extend(C, { target: C.srcElement || B, relatedTarget: h(C), pageX: D.x, pageY: D.y }); return Object.extend(C, t) } } else { l.prototype = window.Event.prototype || document.createEvent("HTMLEvents").__proto__; Object.extend(l.prototype, t); l.extend = Prototype.K } function a(B, C, D) { var E = Element.retrieve(B, "prototype_event_registry"); if (Object.isUndefined(E)) { i.push(B); E = Element.retrieve(B, "prototype_event_registry", $H()) } var G = E.get(C); if (Object.isUndefined(G)) { G = []; E.set(C, G) } if (G.pluck("handler").include(D)) { return false } var F; if (C.include(":")) { F = function (H) { if (Object.isUndefined(H.eventName)) { return false } if (H.eventName !== C) { return false } l.extend(H, B); D.call(B, H) } } else { if (!u && (C === "mouseenter" || C === "mouseleave")) { if (C === "mouseenter" || C === "mouseleave") { F = function (I) { l.extend(I, B); var J = I.relatedTarget; while (J && J !== B) { try { J = J.parentNode } catch (H) { J = B } } if (J === B) { return } D.call(B, I) } } } else { F = function (H) { l.extend(H, B); D.call(B, H) } } } F.handler = D; G.push(F); return F } function b() { for (var B = 0, C = i.length; B < C; B++) { l.stopObserving(i[B]); i[B] = null } } var i = []; if (Prototype.Browser.IE) { window.attachEvent("onunload", b) } if (Prototype.Browser.WebKit) { window.addEventListener("unload", Prototype.emptyFunction, false) } var c = Prototype.K; if (!u) { c = function (B) { var C = { mouseenter: "mouseover", mouseleave: "mouseout" }; return B in C ? C[B] : B } } function v(C, D, E) { C = $(C); var F = a(C, D, E); if (!F) { return C } if (D.include(":")) { if (C.addEventListener) { C.addEventListener("dataavailable", F, false) } else { C.attachEvent("ondataavailable", F); C.attachEvent("onfilterchange", F) } } else { var B = c(D); if (C.addEventListener) { C.addEventListener(B, F, false) } else { C.attachEvent("on" + B, F) } } return C } function A(C, D, E) { C = $(C); var F = Element.retrieve(C, "prototype_event_registry"); if (Object.isUndefined(F)) { return C } if (D && !E) { var H = F.get(D); if (Object.isUndefined(H)) { return C } H.each(function (I) { Element.stopObserving(C, D, I.handler) }); return C } else { if (!D) { F.each(function (J) { var I = J.key, K = J.value; K.each(function (L) { Element.stopObserving(C, I, L.handler) }) }); return C } } var H = F.get(D); if (!H) { return } var G = H.find(function (I) { return I.handler === E }); if (!G) { return C } var B = c(D); if (D.include(":")) { if (C.removeEventListener) { C.removeEventListener("dataavailable", G, false) } else { C.detachEvent("ondataavailable", G); C.detachEvent("onfilterchange", G) } } else { if (C.removeEventListener) { C.removeEventListener(B, G, false) } else { C.detachEvent("on" + B, G) } } F.set(D, H.without(G)); return C } function n(C, E, F, B) { C = $(C); if (Object.isUndefined(B)) { B = true } if (C == document && document.createEvent && !C.dispatchEvent) { C = document.documentElement } var D; if (document.createEvent) { D = document.createEvent("HTMLEvents"); D.initEvent("dataavailable", true, true) } else { D = document.createEventObject(); D.eventType = B ? "ondataavailable" : "onfilterchange" } D.eventName = E; D.memo = F || {}; if (document.createEvent) { C.dispatchEvent(D) } else { C.fireEvent(D.eventType, D) } return l.extend(D) } Object.extend(l, l.Methods); Object.extend(l, { fire: n, observe: v, stopObserving: A }); Element.addMethods({ fire: n, observe: v, stopObserving: A }); Object.extend(document, { fire: n.methodize(), observe: v.methodize(), stopObserving: A.methodize(), loaded: false }); if (window.Event) { Object.extend(window.Event, l) } else { window.Event = l } })(); (function () { var d; function b() { if (document.loaded) { return } if (d) { window.clearTimeout(d) } document.loaded = true; document.fire("dom:loaded") } function a() { if (document.readyState === "complete") { document.stopObserving("readystatechange", a); b() } } function c() { try { document.documentElement.doScroll("left") } catch (f) { d = c.defer(); return } b() } if (document.addEventListener) { document.addEventListener("DOMContentLoaded", b, false) } else { document.observe("readystatechange", a); if (window == top) { d = c.defer() } } Event.observe(window, "load", b) })(); Element.addMethods(); Hash.toQueryString = Object.toQueryString; var Toggle = { display: Element.toggle }; Element.Methods.childOf = Element.Methods.descendantOf; var Insertion = { Before: function (b, a) { return Element.insert(b, { before: a }) }, Top: function (b, a) { return Element.insert(b, { top: a }) }, Bottom: function (b, a) { return Element.insert(b, { bottom: a }) }, After: function (b, a) { return Element.insert(b, { after: a }) } }; var $continue = new Error('"throw $continue" is deprecated, use "return" instead'); var Position = { includeScrollOffsets: false, prepare: function () { this.deltaX = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0; this.deltaY = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 }, within: function (a, b, c) { if (this.includeScrollOffsets) { return this.withinIncludingScrolloffsets(a, b, c) } this.xcomp = b; this.ycomp = c; this.offset = Element.cumulativeOffset(a); return (c >= this.offset[1] && c < this.offset[1] + a.offsetHeight && b >= this.offset[0] && b < this.offset[0] + a.offsetWidth) }, withinIncludingScrolloffsets: function (a, c, d) { var b = Element.cumulativeScrollOffset(a); this.xcomp = c + b[0] - this.deltaX; this.ycomp = d + b[1] - this.deltaY; this.offset = Element.cumulativeOffset(a); return (this.ycomp >= this.offset[1] && this.ycomp < this.offset[1] + a.offsetHeight && this.xcomp >= this.offset[0] && this.xcomp < this.offset[0] + a.offsetWidth) }, overlap: function (b, a) { if (!b) { return 0 } if (b == "vertical") { return ((this.offset[1] + a.offsetHeight) - this.ycomp) / a.offsetHeight } if (b == "horizontal") { return ((this.offset[0] + a.offsetWidth) - this.xcomp) / a.offsetWidth } }, cumulativeOffset: Element.Methods.cumulativeOffset, positionedOffset: Element.Methods.positionedOffset, absolutize: function (a) { Position.prepare(); return Element.absolutize(a) }, relativize: function (a) { Position.prepare(); return Element.relativize(a) }, realOffset: Element.Methods.cumulativeScrollOffset, offsetParent: Element.Methods.getOffsetParent, page: Element.Methods.viewportOffset, clone: function (b, c, a) { a = a || {}; return Element.clonePosition(c, b, a) } }; if (!document.getElementsByClassName) { document.getElementsByClassName = function (a) { function b(c) { return c.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + c + " ')]" } a.getElementsByClassName = Prototype.BrowserFeatures.XPath ? function (e, c) { c = c.toString().strip(); var d = /\s/.test(c) ? $w(c).map(b).join("") : b(c); return d ? document._getElementsByXPath(".//*" + d, e) : [] } : function (g, d) { d = d.toString().strip(); var h = [], e = (/\s/.test(d) ? $w(d) : null); if (!e && !d) { return h } var k = $(g).getElementsByTagName("*"); d = " " + d + " "; for (var j = 0, c, f; c = k[j]; j++) { if (c.className && (f = " " + c.className + " ") && (f.include(d) || (e && e.all(function (i) { return !i.toString().blank() && f.include(" " + i + " ") })))) { h.push(Element.extend(c)) } } return h }; return function (c, d) { return $(d || document.body).getElementsByClassName(c) } }(Element.Methods) } Element.ClassNames = Class.create(); Element.ClassNames.prototype = { initialize: function (a) { this.element = $(a) }, _each: function (a) { this.element.className.split(/\s+/).select(function (b) { return b.length > 0 })._each(a) }, set: function (a) { this.element.className = a }, add: function (a) { if (this.include(a)) { return } this.set($A(this).concat(a).join(" ")) }, remove: function (a) { if (!this.include(a)) { return } this.set($A(this).without(a).join(" ")) }, toString: function () { return $A(this).join(" ") } }; Object.extend(Element.ClassNames.prototype, Enumerable); if (Prototype.Browser.Gecko) { var UpdateHelper = Class.create({ logLevel: 0, MessageTemplate: new Template("Update Helper: #{message}\n#{stack}"), Regexp: new RegExp("@" + window.location.protocol + ".*?\\d+\\n", "g"), initialize: function (a) { var b = function (c, d) { this.notify(c, d) }.bind(this); a.each(function (e) { var c = e.condition, i = e.type || "info", f = e.message, h = e.namespace, g = e.methodName; h[g] = (h[g] || function () { }).wrap(function (j) { var d = $A(arguments).splice(1); if (!c || c.apply(this, d)) { b(f, i) } return j.apply(j, d) }) }); Element.addMethods() }, notify: function (a, b) { switch (b) { case "info": if (this.logLevel > UpdateHelper.Info) { return false } case "warn": if (this.logLevel > UpdateHelper.Warn) { return false } default: if (this.logLevel > UpdateHelper.Error) { return false } } this.log(this.MessageTemplate.evaluate({ message: a, stack: this.getStack() }), b); return true }, getStack: function () { try { throw new Error("stack") } catch (a) { return (a.stack || "").match(this.Regexp).reject(function (b) { return /(prototype|unittest|update_helper)\.js/.test(b) }).join("\n") } }, log: function (a, b) { if (window.console && window.console.log && window.console.error && window.console.warn) { if (b == "error") { console.error(a) } else { if (b == "warn") { console.warn(a) } else { console.log(a) } } } this.CNQRLog(a, b) }, CNQRLog: function (a, c) { var b = { errDesc: a, cat: "PrototypeJS", subCat: "Deprecation " + c, u: location.pathname, r: document.referrer, t: "log" }; new Ajax.Request("/Net2/JSLogging/jsError.ashx", { method: "post", parameters: b }) } }); Object.extend(UpdateHelper, { Info: 0, Warn: 1, Error: 2 }); var prototypeUpdateHelper = new UpdateHelper([{ methodName: "display", namespace: Toggle, message: "Toggle.display has been deprecated, please use Element.toggle instead." }, { methodName: "show", namespace: Element.Methods, message: 'Passing an arbitrary number of elements to Element.show is no longer supported.\nUse [id_1, id_2, ...].each(Element.show) or $(id_1, id_2, ...).invoke("show") instead.', type: "error", condition: function () { return arguments.length > 1 && !Object.isNumber(arguments[1]) } }, { methodName: "hide", namespace: Element.Methods, message: 'Passing an arbitrary number of elements to Element.hide is no longer supported.\nUse [id_1, id_2, ...].each(Element.hide) or $(id_1, id_2, ...).invoke("hide") instead.', type: "error", condition: function () { return arguments.length > 1 && !Object.isNumber(arguments[1]) } }, { methodName: "toggle", namespace: Element.Methods, message: 'Passing an arbitrary number of elements to Element.toggle is no longer supported.\nUse [id_1, id_2, ...].each(Element.toggle) or $(id_1, id_2, ...).invoke("toggle") instead.', type: "error", condition: function () { return arguments.length > 1 && !Object.isNumber(arguments[1]) } }, { methodName: "clear", namespace: Form.Element.Methods, message: 'Passing an arbitrary number of elements to Field.clear is no longer supported.\nUse [id_1, id_2, ...].each(Form.Element.clear) or $(id_1, id_2, ...).invoke("clear") instead.', type: "error", condition: function () { return arguments.length > 1 && !Object.isNumber(arguments[1]) } }, { methodName: "present", namespace: Form.Element.Methods, message: 'Passing an arbitrary number of elements to Field.present is no longer supported.\nUse [id_1, id_2, ...].each(Form.Element.present) or $(id_1, id_2, ...).invoke("present") instead.', type: "error", condition: function () { return arguments.length > 1 && !Object.isNumber(arguments[1]) } }, { methodName: "childOf", namespace: Element.Methods, message: "Element#childOf has been deprecated, please use Element#descendantOf instead." }, { methodName: "Before", namespace: Insertion, message: "Insertion.Before has been deprecated, please use Element#insert instead." }, { methodName: "Top", namespace: Insertion, message: "Insertion.Top has been deprecated, please use Element#insert instead." }, { methodName: "Bottom", namespace: Insertion, message: "Insertion.Bottom has been deprecated, please use Element#insert instead." }, { methodName: "After", namespace: Insertion, message: "Insertion.After has been deprecated, please use Element#insert instead." }, { methodName: "prepare", namespace: Position, message: "Position.prepare has been deprecated." }, { methodName: "within", namespace: Position, message: "Position.within has been deprecated." }, { methodName: "withinIncludingScrolloffsets", namespace: Position, message: "Position.withinIncludingScrolloffsets has been deprecated." }, { methodName: "overlap", namespace: Position, message: "Position.overlap has been deprecated." }, { methodName: "cumulativeOffset", namespace: Position, message: "Position.cumulativeOffset has been deprecated, please use Element#cumulativeOffset instead." }, { methodName: "positionedOffset", namespace: Position, message: "Position.positionedOffset has been deprecated, please use Element#positionedOffset instead." }, { methodName: "absolutize", namespace: Position, message: "Position.absolutize has been deprecated, please use Element#absolutize instead." }, { methodName: "relativize", namespace: Position, message: "Position.relativize has been deprecated, please use Element#relativize instead." }, { methodName: "realOffset", namespace: Position, message: "Position.realOffset has been deprecated, please use Element#cumulativeScrollOffset instead." }, { methodName: "offsetParent", namespace: Position, message: "Position.offsetParent has been deprecated, please use Element#getOffsetParent instead." }, { methodName: "page", namespace: Position, message: "Position.page has been deprecated, please use Element#viewportOffset instead." }, { methodName: "clone", namespace: Position, message: "Position.clone has been deprecated, please use Element#clonePosition instead." }, { methodName: "initialize", namespace: Element.ClassNames.prototype, message: "Element.ClassNames has been deprecated." }, { methodName: "classNames", namespace: Element.Methods, message: "Element#classNames has been deprecated.\nIf you need to access CSS class names as an array, try: $w(element.classname)." }, { methodName: "setStyle", namespace: Element.Methods, message: "Use of uncamelized style-property names is no longer supported.\nUse either camelized style-property names or a regular CSS string instead (see online documentation).", type: "error", condition: function (a, b) { return !Object.isString(b) && Object.keys(b).join("").include("-") } }, { methodName: "getElementsByClassName", namespace: document, message: "document.getElementsByClassName has been deprecated, please use $$ instead." }, { methodName: "getElementsByClassName", namespace: Element.Methods, message: "Element#getElementsByClassName has been deprecated, please use Element#select instead." }, { methodName: "immediateDescendants", namespace: Element.Methods, message: "Element#immediateDescendants has been deprecated, please use Element#childElements instead." }, { methodName: "getElementsBySelector", namespace: Element.Methods, message: "Element#getElementsBySelector has been deprecated, please use Element#select instead." }, { methodName: "toQueryString", namespace: Hash, message: "Hash.toQueryString has been deprecated.\nUse the instance method Hash#toQueryString or Object.toQueryString instead." }, { methodName: "toJSON", namespace: Hash, message: "Hash.toJSON has been removed.\nUse the instance method Hash#toJSON or Object.toJSON instead.", type: "error" }, { methodName: "remove", namespace: Hash.prototype, message: "Hash#remove is no longer supported, use Hash#unset instead.\nPlease note that Hash#unset only accepts one argument.", type: "error" }, { methodName: "merge", namespace: Hash.prototype, message: "Hash#merge is no longer destructive and now operates on a clone of the Hash instance.\nIf you need a destructive merge, use Hash#update instead.", type: "warn" }, { methodName: "unloadCache", namespace: Event, message: "Event.unloadCache has been deprecated.", type: "error" }, { methodName: "create", namespace: Class, message: "The class API has been fully revised and now allows for mixins and inheritance.\nYou can find more about it here: http://prototypejs.org/learn/class-inheritance", condition: function () { return !arguments.length } }]); (function () { var a = Object.keys(Hash.prototype).concat(["_object", "__properties"]); var d = { setting: new Template("Directly setting a property on an instance of Hash is no longer supported.\nPlease use Hash#set('#{property}', #{value}) instead."), getting: new Template("Directly accessing a property of an instance of Hash is no longer supported.\nPlease use Hash#get('#{property}') instead.") }; function e(h, i) { var g = d[arguments.length == 1 ? "getting" : "setting"].evaluate({ property: h, value: Object.inspect(i) }); prototypeUpdateHelper.notify(g, "error") } function c(g, h) { f(g); if (g.__properties.include(h)) { return } g.__properties.push(h); g.__defineGetter__(h, function () { b(this); e(h) }); g.__defineSetter__(h, function (i) { b(this); e(h, i) }) } function b(h) { f(h); var g = Object.keys(h); if (g.length == h.__properties.length) { return } g.each(function (i) { if (h.__properties.include(i)) { return } e(i, h[i]); c(h, i) }) } function f(g) { if (typeof g.__properties === "undefined") { g.__properties = a.clone() } return g } Hash.prototype.set = Hash.prototype.set.wrap(function (g, h, i) { c(this, h); return g(h, i) }); $w("merge update").each(function (g) { Hash.prototype[g] = Hash.prototype[g].wrap(function (i, h) { for (var j in h) { c(this, j) } return i(h) }) }); $H(Hash.prototype).each(function (h) { var g = h.key; if (!Object.isFunction(h.value) || g == "initialize") { return } Hash.prototype[g] = Hash.prototype[g].wrap(function (i) { b(this); return i.apply(i, $A(arguments).splice(1)) }) }); Hash.prototype.initialize = Hash.prototype.initialize.wrap(function (h, g) { f(this); for (var i in g) { c(this, i) } h(g) }) })(); prototypeUpdateHelper.logLevel = UpdateHelper.Warn };